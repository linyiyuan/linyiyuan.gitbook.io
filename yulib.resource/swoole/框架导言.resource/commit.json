{"compress":true,"commitItems":[["65f966ee-94ce-4951-ae90-82f3b9566231",1572328043839,"",[[1572328001378,["sirui-php@DESKTOP-PSVFMK8",[[1,0,"# 框架导言\n\n\n\n"]],[0,0],[9,9]]],[1572328011629,["sirui-php@DESKTOP-PSVFMK8",[[-1,9,"\n"],[1,10,"S"]],[9,9],[10,10]]],[1572328012072,["sirui-php@DESKTOP-PSVFMK8",[[-1,9,"S"],[1,10,"\n"]],[10,10],[9,9]]],[1572328012341,["sirui-php@DESKTOP-PSVFMK8",[[-1,9,"\n"],[1,10,"`"]],[9,9],[10,10]]],[1572328012533,["sirui-php@DESKTOP-PSVFMK8",[[1,10,"`"]],[10,10],[11,11]]],[1572328014176,["sirui-php@DESKTOP-PSVFMK8",[[1,10,"Swoole"]],[10,10],[16,16]]],[1572328034241,["sirui-php@DESKTOP-PSVFMK8",[[1,17," 是PHP的一个拓展，但是它与一般PHP拓展不同"]],[17,17],[41,41]]],[1572328034446,["sirui-php@DESKTOP-PSVFMK8",[[-1,40,"同"]],[41,41],[40,40]]],[1572328043223,["sirui-php@DESKTOP-PSVFMK8",[[1,40,"一样，普通拓展是"]],[40,40],[48,48]]],[1572328043468,["sirui-php@DESKTOP-PSVFMK8",[[-1,47,"是"]],[48,48],[47,47]]],[1572328044823,["sirui-php@DESKTOP-PSVFMK8",[[1,47,"知识提供"]],[47,47],[51,51]]],[1572328045516,["sirui-php@DESKTOP-PSVFMK8",[[-1,47,"知识提供"]],[51,51],[47,47]]],[1572328064735,["sirui-php@DESKTOP-PSVFMK8",[[1,47,"只是提供一个库函数，而Swoole拓展在运行后会接管PHP 的"]],[47,47],[78,78]]],[1572328065076,["sirui-php@DESKTOP-PSVFMK8",[[-1,76," 的"]],[78,78],[76,76]]],[1572328091886,["sirui-php@DESKTOP-PSVFMK8",[[1,76,"的控制权，进入事件循环，当IO事件发生后底层会自动回调指定的PHP函数"]],[76,76],[111,111]]],[1572328092116,["sirui-php@DESKTOP-PSVFMK8",[[1,111,"\n\n"]],[111,111],[112,112]]],[1572328095924,["sirui-php@DESKTOP-PSVFMK8",[[-1,112,"\n"]],[112,112],[111,111]]],[1572328096597,["sirui-php@DESKTOP-PSVFMK8",[[1,111,"。"]],[111,111],[112,112]]],[1572328097414,["sirui-php@DESKTOP-PSVFMK8",[[1,113,"\n"]],[112,112],[113,113]]],[1572328097652,["sirui-php@DESKTOP-PSVFMK8",[[1,114,"\n"]],[113,113],[114,114]]],[1572328152782,["sirui-php@DESKTOP-PSVFMK8",[[-1,114,"\n"],[1,115,"使用"]],[114,114],[116,116]]],[1572328162146,["sirui-php@DESKTOP-PSVFMK8",[[1,116,"PHP+Swoole可以"]],[116,116],[128,128]]],[1572328167955,["sirui-php@DESKTOP-PSVFMK8",[[1,128,"编写高兴能"]],[128,128],[133,133]]],[1572328168419,["sirui-php@DESKTOP-PSVFMK8",[[-1,130,"高兴能"]],[133,133],[130,130]]],[1572328174025,["sirui-php@DESKTOP-PSVFMK8",[[1,130,"高性能的的异步"]],[130,130],[137,137]]],[1572328174603,["sirui-php@DESKTOP-PSVFMK8",[[-1,134,"的异步"]],[137,137],[134,134]]],[1572328179148,["sirui-php@DESKTOP-PSVFMK8",[[1,134,"异步并发TCP "]],[134,134],[142,142]]],[1572328180435,["sirui-php@DESKTOP-PSVFMK8",[[-1,141," "]],[142,142],[141,141]]],[1572328198867,["sirui-php@DESKTOP-PSVFMK8",[[1,141,"，UDP，UNIX，SOCKET，HTTP《"]],[141,141],[163,163]]],[1572328199491,["sirui-php@DESKTOP-PSVFMK8",[[-1,162,"《"]],[163,163],[162,162]]],[1572328213095,["sirui-php@DESKTOP-PSVFMK8",[[1,162,"，WebSocket服务"]],[162,162],[174,174]]],[1572328214164,["sirui-php@DESKTOP-PSVFMK8",[[1,174,"\n\n"]],[174,174],[175,175]]],[1572328214318,["sirui-php@DESKTOP-PSVFMK8",[[1,176,"\n"]],[175,175],[176,176]]],[1572328240915,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"\n"]],[176,176],[175,175]]],[1572328241399,["sirui-php@DESKTOP-PSVFMK8",[[1,176,"\n"]],[175,175],[176,176]]],[1572328242528,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"\n"],[1,177,"使用"]],[176,176],[178,178]]],[1572328250496,["sirui-php@DESKTOP-PSVFMK8",[[1,178,"Swoole拓展"]],[178,178],[186,186]]],[1572328250948,["sirui-php@DESKTOP-PSVFMK8",[[-1,184,"拓展"]],[186,186],[184,184]]],[1572328260526,["sirui-php@DESKTOP-PSVFMK8",[[1,184,"编写代码需要系统安装PHP"]],[184,184],[197,197]]],[1572328261628,["sirui-php@DESKTOP-PSVFMK8",[[-1,194,"PHP"]],[197,197],[194,194]]],[1572328265199,["sirui-php@DESKTOP-PSVFMK8",[[1,194,"Swoole图片组"]],[194,194],[203,203]]],[1572328265886,["sirui-php@DESKTOP-PSVFMK8",[[-1,200,"图片组"]],[203,203],[200,200]]],[1572328266960,["sirui-php@DESKTOP-PSVFMK8",[[1,200,"图片长"]],[200,200],[203,203]]],[1572328267429,["sirui-php@DESKTOP-PSVFMK8",[[-1,200,"图片长"]],[203,203],[200,200]]],[1572328277351,["sirui-php@DESKTOP-PSVFMK8",[[1,200,"拓展，常见的安装方式是编译安装"]],[200,200],[215,215]]],[1572328288884,["sirui-php@DESKTOP-PSVFMK8",[[1,215,"（）"]],[215,215],[217,217]]],[1572328291153,["sirui-php@DESKTOP-PSVFMK8",[[1,216,"安装教程"]],[216,216],[220,220]]],[1572328292037,["sirui-php@DESKTOP-PSVFMK8",[[-1,215,"（安装教程"]],[220,220],[215,215]]],[1572328292431,["sirui-php@DESKTOP-PSVFMK8",[[1,215,"！"]],[215,215],[216,216]]],[1572328293548,["sirui-php@DESKTOP-PSVFMK8",[[-1,215,"！）"]],[216,216],[215,215]]],[1572328295664,["sirui-php@DESKTOP-PSVFMK8",[[1,215," !()]"]],[215,215],[220,220]]],[1572328296230,["sirui-php@DESKTOP-PSVFMK8",[[-1,219,"]"]],[220,220],[219,219]]],[1572328296484,["sirui-php@DESKTOP-PSVFMK8",[[1,219,"]"]],[219,219],[220,220]]],[1572328296907,["sirui-php@DESKTOP-PSVFMK8",[[-1,219,"]"]],[220,220],[219,219]]],[1572328297205,["sirui-php@DESKTOP-PSVFMK8",[[1,219,"]\\"]],[219,219],[221,221]]],[1572328297990,["sirui-php@DESKTOP-PSVFMK8",[[-1,219,"]\\"]],[221,221],[219,219]]],[1572328298240,["sirui-php@DESKTOP-PSVFMK8",[[1,219,"[]"]],[219,219],[221,221]]],[1572328301206,["sirui-php@DESKTOP-PSVFMK8",[[1,218,"安装教程"]],[218,218],[222,222]]],[1572328312431,["sirui-php@DESKTOP-PSVFMK8",[[1,224,"v"]],[224,224],[225,225]]],[1572328313188,["sirui-php@DESKTOP-PSVFMK8",[[-1,224,"v"]],[225,225],[224,224]]],[1572328313394,["sirui-php@DESKTOP-PSVFMK8",[[1,224,"[https://wiki.swoole.com/wiki/page/6.html](https://wiki.swoole.com/wiki/page/6.html)"]],[224,224],[308,308]]],[1572328318779,["sirui-php@DESKTOP-PSVFMK8",[[-1,216,"!"]],[217,217],[216,216]]],[1572328319643,["sirui-php@DESKTOP-PSVFMK8",[[1,216,"!"]],[216,216],[217,217]]],[1572328319862,["sirui-php@DESKTOP-PSVFMK8",[[-1,224,"[https://wiki.swoole.com/wiki/page/6.html](https://wiki.swoole.com/wiki/page/6.html)"]],[308,308],[224,224]]],[1572328320075,["sirui-php@DESKTOP-PSVFMK8",[[1,224,"v"]],[224,224],[225,225]]],[1572328320400,["sirui-php@DESKTOP-PSVFMK8",[[-1,224,"v"]],[225,225],[224,224]]],[1572328320631,["sirui-php@DESKTOP-PSVFMK8",[[-1,218,"安装教程"]],[222,222],[218,218]]],[1572328320993,["sirui-php@DESKTOP-PSVFMK8",[[-1,219,"[]"]],[221,221],[219,219]]],[1572328321305,["sirui-php@DESKTOP-PSVFMK8",[[1,219,"]\\"]],[219,219],[221,221]]],[1572328327950,["sirui-php@DESKTOP-PSVFMK8",[[-1,177,"用Swoole编写代码需要系统安装Swoole拓展，常见的安装方式是编译安装 !()]\\"]],[221,221],[177,177]]],[1572328328300,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"使"],[1,177,"\n"]],[177,177],[176,176]]],[1572328328531,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"\n"]],[176,176],[175,175]]],[1572328328860,["sirui-php@DESKTOP-PSVFMK8",[[-1,175,"\n"]],[175,175],[174,174]]],[1572328379187,["sirui-php@DESKTOP-PSVFMK8",[[1,175,"\n"]],[174,174],[175,175]]],[1572328379835,["sirui-php@DESKTOP-PSVFMK8",[[-1,175,"\n"],[1,176,"s"]],[175,175],[176,176]]],[1572328380107,["sirui-php@DESKTOP-PSVFMK8",[[1,176,"hi"]],[176,176],[178,178]]],[1572328380578,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"hi"]],[178,178],[176,176]]],[1572328380724,["sirui-php@DESKTOP-PSVFMK8",[[-1,175,"s"],[1,176,"\n"]],[176,176],[175,175]]],[1572328400466,["sirui-php@DESKTOP-PSVFMK8",[[1,176,"\n"]],[175,175],[176,176]]],[1572328401436,["sirui-php@DESKTOP-PSVFMK8",[[-1,176,"\n"],[1,177," "]],[176,176],[177,177]]],[1572328403056,["sirui-php@DESKTOP-PSVFMK8",[[1,177,"使用"]],[177,177],[179,179]]],[1572328406269,["sirui-php@DESKTOP-PSVFMK8",[[1,179,"SWoole"]],[179,179],[185,185]]],[1572328407771,["sirui-php@DESKTOP-PSVFMK8",[[-1,180,"Woole"]],[185,185],[180,180]]],[1572328419846,["sirui-php@DESKTOP-PSVFMK8",[[1,180,"woole的几个原因：\n *   常驻内存，避免重复加载带来的性能损耗，提升海量性能\n\n    *   协程异步，提高对 I/O 密集型场景并发处理能力（如：微信开发、支付、登录等）\n\n    *   方便地开发 Http、WebSocket、TCP、UDP 等应用，可以与硬件通信\n\n    *   PHP 高性能微服务架构成为现实\n\n作者：无锡程序员宇润\n链接：[https://www.jianshu.com/p/511319b095cd](https://www.jianshu.com/p/511319b095cd)\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[180,180],[484,484]]],[1572328421844,["sirui-php@DESKTOP-PSVFMK8",[[-1,349,"作者：无锡程序员宇润"],[-1,360,"链接：[https://www.jianshu.com/p/511319b095cd](https://www.jianshu.com/p/511319b095cd)\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[349,484],[349,349]]],[1572328422020,["sirui-php@DESKTOP-PSVFMK8",[[-1,349,"\n"]],[349,349],[348,348]]],[1572328445897,["sirui-php@DESKTOP-PSVFMK8",[[1,348,"### 常驻内存\n\n目前传统 PHP框架，在处理每个请求之前，都要做一遍加载框架文件、配置的操作。这可能已经成为性能问题的一大原因，而使用 Swoole 则没有这个问题，一次加载多次使用。\n\n### 协程\n\n如下图所示，这是同一个线程处理并发请求的场景，比如你某个接口中需要调用其它 api 接口或读写大文件，传统同步阻塞和协程异步的优势就体现了出来。\n\n[](https://blog.yurunsoft.com/Static/Upload/2018/06/16/1529109536554593.png)\n\n![](//upload-images.jianshu.io/upload_images/12714330-39170e60dd9a66fc.png?imageMogr2/auto-orient/strip|imageView2/2/w/916/format/webp)\n\n [详解 Swoole 协程为什么适合 I/O 密集型场景](https://blog.yurunsoft.com/Static/Upload/2018/06/16/1529109536554593.png) \n\n说到协程，就得先简单说说进程和线程，众所周知进程是很占用资源的，为了处理请求大量创建进程肯定是得不偿失的。而多线程应用就比较多了，在 CPU 层面有几个核心就会执行几个任务，线程一旦创建的多了，就会有线程调度的损耗。\n\n协程是在单线程基础上实现的，它可以最大限度利用 CPU 资源，而不会在等待 I/O 时白白浪费。当然，协程数越多占用的内存也就越多，不过这个是可以接受的，相比进程和线程，占用的资源是相对较少的。\n\n使用协程时，遇到读写文件、请求接口等场景，会自动挂起协程，把 CPU 让给其它协程执行任务，这样可以提升单线程的 CPU 资源利用率，减少浪费，从而提高性能。\n\n协程代码示例：\n\n```php\n<?php\nuse Swoole\\Coroutine as co;\n\n// 协程\n$time = microtime(true);\n// 创建10个协程\nfor($i = 0; $i < 10; ++$i)\n{\n    // 创建协程\n    go(function() use($i){\n        co::sleep(1.0); // 模拟请求接口、读写文件等I/O\n        echo $i, PHP_EOL;\n    });\n}\nswoole_event_wait();\necho 'co time:', microtime(true) - $time, ' s', PHP_EOL;\n\n// 同步\n$time = microtime(true);\n// 创建10个协程\nfor($i = 0; $i < 10; ++$i)\n{\n    sleep(1); // 模拟请求接口、读写文件等I/O\n    echo $i, PHP_EOL;\n}\necho 'sync time:', microtime(true) - $time, ' s', PHP_EOL;\n\n```\n\n运行结果：\n\n```php\n0\n9\n8\n7\n6\n5\n4\n3\n2\n1\nco time:1.0087130069733 s\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nsync time:10.010055065155 s\n\n```\n\n从上面结果可以看出，协程方式执行并不是顺序的，性能更高，在sleep时会把当前线程的任务执行权交给其他协程。\n\n### 创建 Http 服务\n\n其实也没想象中的难，看代码：\n\n```php\n$http = new swoole_http_server(\"127.0.0.1\", 9501);\n$http->on('request', function ($request, $response) {\n    $response->end(\"<h1>Hello Swoole. #\".rand(1000, 9999).\"</h1>\");\n});\n$http->start();\n\n```\n\n### 微服务\n\nTars是腾讯从2008年到今天一直在使用的后台逻辑层的统一应用框架TAF（Total Application Framework），目前支持C++,Java,PHP,Nodejs语言。该框架为用户提供了涉及到开发、运维、以及测试的一整套解决方案，帮助一个产品或者服务快速开发、部署、测试、上线。 它集可扩展协议编解码、高性能RPC通信框架、名字路由与发现、发布监控、日志统计、配置管理等于一体，通过它可以快速用微服务的方式构建自己的稳定可靠的分布式应用，并实现完整有效的服务治理。\n\n详见：[https://segmentfault.com/a/1190000011825769](https://segmentfault.com/a/1190000011825769)\n\n如有错误之处欢迎指出，我是真心想向大家推荐 Swoole！\n\n作者：无锡程序员宇润\n链接：[https://www.jianshu.com/p/511319b095cd](https://www.jianshu.com/p/511319b095cd)\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[348,348],[2571,2571]]],[1572328449486,["sirui-php@DESKTOP-PSVFMK8",[[1,348,"    * \n"]],[347,347],[354,354]]],[1572328452343,["sirui-php@DESKTOP-PSVFMK8",[[1,0,"#"]],[1,1],[2,2]]],[1572328453182,["sirui-php@DESKTOP-PSVFMK8",[[1,2,"#"]],[2,2],[3,3]]],[1572328453950,["sirui-php@DESKTOP-PSVFMK8",[[-1,10,"\n"]],[9,9],[8,8]]],[1572328459357,["sirui-php@DESKTOP-PSVFMK8",[[-1,358,"# "]],[360,360],[358,358]]],[1572328460094,["sirui-php@DESKTOP-PSVFMK8",[[1,358," "]],[358,358],[359,359]]],[1572328462678,["sirui-php@DESKTOP-PSVFMK8",[[-1,2,"#"]],[2,3],[2,2]]],[1572328472915,["sirui-php@DESKTOP-PSVFMK8",[[-1,2066,"#"]],[2067,2067],[2066,2066]]],[1572328473421,["sirui-php@DESKTOP-PSVFMK8",[[1,2067," "]],[2066,2066],[2067,2067]]],[1572328474043,["sirui-php@DESKTOP-PSVFMK8",[[-1,2067," "]],[2067,2067],[2066,2066]]],[1572328474907,["sirui-php@DESKTOP-PSVFMK8",[[-1,1829," "]],[1830,1830],[1829,1829]]],[1572328475369,["sirui-php@DESKTOP-PSVFMK8",[[1,1829," "]],[1829,1829],[1830,1830]]],[1572328476070,["sirui-php@DESKTOP-PSVFMK8",[[-1,1828,"# "]],[1830,1830],[1828,1828]]],[1572328476213,["sirui-php@DESKTOP-PSVFMK8",[[1,1828," "]],[1828,1828],[1829,1829]]],[1572328482124,["sirui-php@DESKTOP-PSVFMK8",[[-1,2409,"如有错误之处欢迎指出，我是真心想向大家推荐 Swoole！\n\n作者：无锡程序员宇润\n链接：[https://www.jianshu.com/p/511319b095cd](https://www.jianshu.com/p/511319b095cd)\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[2408,2575],[2408,2408]]],[1572328482652,["sirui-php@DESKTOP-PSVFMK8",[[-1,2408,"\n"]],[2408,2408],[2407,2407]]],[1572328484667,["sirui-php@DESKTOP-PSVFMK8",[[-1,2407,"\n"]],[2407,2407],[2407,2407]]],[1572328498006,["sirui-php@DESKTOP-PSVFMK8",[[-1,355,"## 常驻内存"],[-1,363,"\n目前传统 PHP框架，在处理每个请求之前，都要做一遍加载框架文件、配置的操作。这可能已经成为性能问题的一大原因，而使用 Swoole 则没有这个问题，一次加载多次使用。\n\n### 协程\n\n如下图所示，这是同一个线程处理并发请求的场景，比如你某个接口中需要调用其它 api 接口或读写大文件，传统同步阻塞和协程异步的优势就体现了出来。\n\n[](https://blog.yurunsoft.com/Static/Upload/2018/06/16/1529109536554593.png)\n\n![](//upload-images.jianshu.io/upload_images/12714330-39170e60dd9a66fc.png?imageMogr2/auto-orient/strip|imageView2/2/w/916/format/webp)\n\n [详解 Swoole 协程为什么适合 I/O 密集型场景](https://blog.yurunsoft.com/Static/Upload/2018/06/16/1529109536554593.png) \n\n说到协程，就得先简单说说进程和线程，众所周知进程是很占用资源的，为了处理请求大量创建进程肯定是得不偿失的。而多线程应用就比较多了，在 CPU 层面有几个核心就会执行几个任务，线程一旦创建的多了，就会有线程调度的损耗。\n\n协程是在单线程基础上实现的，它可以最大限度利用 CPU 资源，而不会在等待 I/O 时白白浪费。当然，协程数越多占用的内存也就越多，不过这个是可以接受的，相比进程和线程，占用的资源是相对较少的。\n\n使用协程时，遇到读写文件、请求接口等场景，会自动挂起协程，把 CPU 让给其它协程执行任务，这样可以提升单线程的 CPU 资源利用率，减少浪费，从而提高性能。\n\n协程代码示例：\n\n```php\n<?php\nuse Swoole\\Coroutine as co;\n\n// 协程\n$time = microtime(true);\n// 创建10个协程\nfor($i = 0; $i < 10; ++$i)\n{\n    // 创建协程\n    go(function() use($i){\n        co::sleep(1.0); // 模拟请求接口、读写文件等I/O\n        echo $i, PHP_EOL;\n    });\n}\nswoole_event_wait();\necho 'co time:', microtime(true) - $time, ' s', PHP_EOL;\n\n// 同步\n$time = microtime(true);\n// 创建10个协程\nfor($i = 0; $i < 10; ++$i)\n{\n    sleep(1); // 模拟请求接口、读写文件等I/O\n    echo $i, PHP_EOL;\n}\necho 'sync time:', microtime(true) - $time, ' s', PHP_EOL;\n\n```\n\n运行结果：\n\n```php\n0\n9\n8\n7\n6\n5\n4\n3\n2\n1\nco time:1.0087130069733 s\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nsync time:10.010055065155 s\n\n```\n\n从上面结果可以看出，协程方式执行并不是顺序的，性能更高，在sleep时会把当前线程的任务执行权交给其他协程。\n\n## 创建 Http 服务\n\n其实也没想象中的难，看代码：\n\n```php\n$http = new swoole_http_server(\"127.0.0.1\", 9501);\n$http->on('request', function ($request, $response) {\n    $response->end(\"<h1>Hello Swoole. #\".rand(1000, 9999).\"</h1>\");\n});\n$http->start();\n\n```\n\n## 微服务\n\nTars是腾讯从2008年到今天一直在使用的后台逻辑层的统一应用框架TAF（Total Application Framework），目前支持C++,Java,PHP,Nodejs语言。该框架为用户提供了涉及到开发、运维、以及测试的一整套解决方案，帮助一个产品或者服务快速开发、部署、测试、上线。 它集可扩展协议编解码、高性能RPC通信框架、名字路由与发现、发布监控、日志统计、配置管理等于一体，通过它可以快速用微服务的方式构建自己的稳定可靠的分布式应用，并实现完整有效的服务治理。\n\n详见：[https://segmentfault.com/a/1190000011825769](https://segmentfault.com/a/1190000011825769)"]],[355,2407],[355,355]]],[1572328500742,["sirui-php@DESKTOP-PSVFMK8",[[-1,355,"\n"]],[354,354],[354,354]]],[1572328502237,["sirui-php@DESKTOP-PSVFMK8",[[-1,351," * "]],[354,354],[351,351]]],[1572328504965,["sirui-php@DESKTOP-PSVFMK8",[[1,193,"  "]],[193,193],[195,195]]],[1572328505961,["sirui-php@DESKTOP-PSVFMK8",[[1,353,"  "]],[353,353],[355,355]]],[1572328507733,["sirui-php@DESKTOP-PSVFMK8",[[1,195," "]],[195,195],[196,196]]],[1572328510765,["sirui-php@DESKTOP-PSVFMK8",[[-1,194,"  "],[-1,227,"  "],[-1,278,"  "],[-1,326,"  "]],[196,350],[194,342]]]],null,"sirui-php@DESKTOP-PSVFMK8"],["ed36b4e2-f21d-4d97-93dc-27292293e5cb",1572419822444,"## 框架导言\n\n`Swoole` 是PHP的一个拓展，但是它与一般PHP拓展不一样，普通拓展只是提供一个库函数，而Swoole拓展在运行后会接管PHP的控制权，进入事件循环，当IO事件发生后底层会自动回调指定的PHP函数。\n\n使用PHP+Swoole可以编写高性能的异步并发TCP，UDP，UNIX，SOCKET，HTTP，WebSocket服务\n\n 使用Swoole的几个原因：\n  *   常驻内存，避免重复加载带来的性能损耗，提升海量性能\n\n  *   协程异步，提高对 I/O 密集型场景并发处理能力（如：微信开发、支付、登录等）\n\n  *   方便地开发 Http、WebSocket、TCP、UDP 等应用，可以与硬件通信\n\n  *   PHP 高性能微服务架构成为现实\n     \n",[[1572419795472,["sirui-php@DESKTOP-PSVFMK8",[[-1,343,"     "],[1,348,"\n"]],[348,348],[344,344]]],[1572419796099,["sirui-php@DESKTOP-PSVFMK8",[[-1,344,"\n"],[1,345,"#"]],[344,344],[345,345]]],[1572419796538,["sirui-php@DESKTOP-PSVFMK8",[[1,345,"# "]],[345,345],[347,347]]],[1572419854127,["sirui-php@DESKTOP-PSVFMK8",[[1,347,"编程须知"]],[347,347],[351,351]]],[1572419854880,["sirui-php@DESKTOP-PSVFMK8",[[1,351,"\n\n"]],[351,351],[352,352]]],[1572419855046,["sirui-php@DESKTOP-PSVFMK8",[[1,353,"\n"]],[352,352],[353,353]]],[1572420014152,["sirui-php@DESKTOP-PSVFMK8",[[-1,353,"\n"],[1,354,"1"]],[353,353],[354,354]]],[1572420014920,["sirui-php@DESKTOP-PSVFMK8",[[1,354,". "]],[354,354],[356,356]]],[1572420028343,["sirui-php@DESKTOP-PSVFMK8",[[-1,344,"## 编程须知"],[-1,352,"\n1. "]],[344,356],[344,344]]],[1572420028526,["sirui-php@DESKTOP-PSVFMK8",[[-1,344,"\n"]],[344,344],[343,343]]]],null,"sirui-php@DESKTOP-PSVFMK8"],["b99ec3e8-5870-49c2-9d57-b8e7715f23d5",1572598441244,"## 框架导言\n\n`Swoole` 是PHP的一个拓展，但是它与一般PHP拓展不一样，普通拓展只是提供一个库函数，而Swoole拓展在运行后会接管PHP的控制权，进入事件循环，当IO事件发生后底层会自动回调指定的PHP函数。\n\n使用PHP+Swoole可以编写高性能的异步并发TCP，UDP，UNIX，SOCKET，HTTP，WebSocket服务\n\n 使用Swoole的几个原因：\n  *   常驻内存，避免重复加载带来的性能损耗，提升海量性能\n\n  *   协程异步，提高对 I/O 密集型场景并发处理能力（如：微信开发、支付、登录等）\n\n  *   方便地开发 Http、WebSocket、TCP、UDP 等应用，可以与硬件通信\n\n  *   PHP 高性能微服务架构成为现实\n\n",[[1572598382218,["sirui-php@DESKTOP-PSVFMK8",[[1,343,"  * \n"]],[342,342],[347,347]]],[1572598382347,["sirui-php@DESKTOP-PSVFMK8",[[-1,343,"  * "]],[347,347],[344,344]]],[1572598382483,["sirui-php@DESKTOP-PSVFMK8",[[1,345,"\n"]],[344,344],[345,345]]],[1572598383597,["sirui-php@DESKTOP-PSVFMK8",[[-1,345,"\n"]],[345,345],[344,344]]],[1572598384186,["sirui-php@DESKTOP-PSVFMK8",[[1,345,"\n"]],[344,344],[345,345]]],[1572598390401,["sirui-php@DESKTOP-PSVFMK8",[[-1,345,"\n"],[1,346,"#"]],[345,345],[346,346]]],[1572598398603,["sirui-php@DESKTOP-PSVFMK8",[[1,346,"# Swoole是多进程模式"]],[346,346],[360,360]]],[1572598398827,["sirui-php@DESKTOP-PSVFMK8",[[1,360,"\n\n"]],[360,360],[361,361]]],[1572598403669,["sirui-php@DESKTOP-PSVFMK8",[[1,361,"进程作为程序执行过程中资源分配的基本单位,拥有独立的地址空间,同一进程的线程可以共享本进程的全局变量,静态变量等数据和地址空间,但进程之间资源相互独立.由于PHP语言不支持多线程,因此Swoole使用多进程模式,再多进程模式下就存在进程内存隔离,进程间通信与数据共享问题.\n\nswoole中master主进程会创建manager管理进程和reactor线程,真正的工作进程为worker进程.  manager是创建和管理worker进程,reactor进程测试监听socket,接受数据任务,发送给worker进程去工作,因此所有业务逻辑最终都是在worker进程中进行的,worker进程之间的数据共享与通信必不可少."]],[361,361],[672,672]]],[1572598412811,["sirui-php@DESKTOP-PSVFMK8",[[1,361,"\n"]],[360,360],[361,361]]]],null,"sirui-php@DESKTOP-PSVFMK8"],["434073e3-80db-4dc1-85c2-2d0f8135734f",1572689334207,"## 框架导言\n\n`Swoole` 是PHP的一个拓展，但是它与一般PHP拓展不一样，普通拓展只是提供一个库函数，而Swoole拓展在运行后会接管PHP的控制权，进入事件循环，当IO事件发生后底层会自动回调指定的PHP函数。\n\n使用PHP+Swoole可以编写高性能的异步并发TCP，UDP，UNIX，SOCKET，HTTP，WebSocket服务\n\n 使用Swoole的几个原因：\n  *   常驻内存，避免重复加载带来的性能损耗，提升海量性能\n\n  *   协程异步，提高对 I/O 密集型场景并发处理能力（如：微信开发、支付、登录等）\n\n  *   方便地开发 Http、WebSocket、TCP、UDP 等应用，可以与硬件通信\n\n  *   PHP 高性能微服务架构成为现实\n\n\n## Swoole是多进程模式\n\n进程作为程序执行过程中资源分配的基本单位,拥有独立的地址空间,同一进程的线程可以共享本进程的全局变量,静态变量等数据和地址空间,但进程之间资源相互独立.由于PHP语言不支持多线程,因此Swoole使用多进程模式,再多进程模式下就存在进程内存隔离,进程间通信与数据共享问题.\n\nswoole中master主进程会创建manager管理进程和reactor线程,真正的工作进程为worker进程.  manager是创建和管理worker进程,reactor进程测试监听socket,接受数据任务,发送给worker进程去工作,因此所有业务逻辑最终都是在worker进程中进行的,worker进程之间的数据共享与通信必不可少.\n",[[1572689295249,["sirui-php@DESKTOP-PSVFMK8",[[1,344," ## Swoole是多进程模式    进程作为程序执行过程中资源分配的基本单位,拥有独立的地址空间,同一进程的线程可以共享本进程的全局变量,静态变量等数据和地址空间,但进程之间资源相互独立.由于PHP语言不支持多线程,因此Swoole使用多进程模式,再多进程模式下就存在进程内存隔离,进程间通信与数据共享问题.    swoole中master主进程会创建manager管理进程和reactor线程,真正的工作进程为worker进程.  manager是创建和管理worker进程,reactor进程测试监听socket,接受数据任务,发送给worker进程去工作,因此所有业务逻辑最终都是在worker进程中进行的,wo"]],[344,652],[656,656]]],[1572689296534,["sirui-php@DESKTOP-PSVFMK8",[[-1,344," ## Swoole是多进程模式    进程作为程序执行过程中资源分配的基本单位,拥有独立的地址空间,同一进程的线程可以共享本进程的全局变量,静态变量等数据和地址空间,但进程之间资源相互独立.由于PHP语言不支持多线程,因此Swoole使用多进程模式,再多进程模式下就存在进程内存隔离,进程间通信与数据共享问题.    swoole中master主进程会创建manager管理进程和reactor线程,真正的工作进程为worker进程.  manager是创建和管理worker进程,reactor进程测试监听socket,接受数据任务,发送给worker进程去工作,因此所有业务逻辑最终都是在worker进程中进行的,wo"]],[656,656],[344,652]]]],null,"sirui-php@DESKTOP-PSVFMK8"]]}