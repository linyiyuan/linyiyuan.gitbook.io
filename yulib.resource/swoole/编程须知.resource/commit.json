{"compress":true,"commitItems":[["6676b6da-6256-44f6-8cf5-dacc322ba2cd",1572420102311,"",[[1572420051912,["sirui-php@DESKTOP-PSVFMK8",[[1,0,"# 编程须知\n\n\n\n"]],[0,0],[9,9]]],[1572420058814,["sirui-php@DESKTOP-PSVFMK8",[[-1,9,"\n"]],[9,9],[8,8]]],[1572420059025,["sirui-php@DESKTOP-PSVFMK8",[[-1,8,"\n"]],[8,8],[7,7]]],[1572420059174,["sirui-php@DESKTOP-PSVFMK8",[[-1,7,"\n"]],[7,7],[6,6]]],[1572420060167,["sirui-php@DESKTOP-PSVFMK8",[[-1,0,"# 编程须知"]],[6,6],[0,0]]],[1572420060666,["sirui-php@DESKTOP-PSVFMK8",[[-1,0,"\n"],[1,1,"#"]],[0,0],[1,1]]],[1572420077851,["sirui-php@DESKTOP-PSVFMK8",[[1,1,"# 禁止使用sleepyiji"]],[1,1],[16,16]]],[1572420078575,["sirui-php@DESKTOP-PSVFMK8",[[-1,12,"yiji"]],[16,16],[12,12]]],[1572420080002,["sirui-php@DESKTOP-PSVFMK8",[[1,12,"以及任何"]],[12,12],[16,16]]],[1572420081782,["sirui-php@DESKTOP-PSVFMK8",[[-1,14,"任何"]],[16,16],[14,14]]],[1572420084261,["sirui-php@DESKTOP-PSVFMK8",[[1,14,"其他睡眠函数"]],[14,14],[20,20]]],[1572420086998,["sirui-php@DESKTOP-PSVFMK8",[[-1,15,"他睡眠函数"]],[20,20],[15,15]]],[1572420092232,["sirui-php@DESKTOP-PSVFMK8",[[1,15,"它睡眠函数"]],[15,15],[20,20]]],[1572420092400,["sirui-php@DESKTOP-PSVFMK8",[[1,20,"\n\n"]],[20,20],[21,21]]],[1572420097817,["sirui-php@DESKTOP-PSVFMK8",[[1,21,"不要在代码中执行`sleep`以及其他睡眠函数，这样会导致整个进程阻塞"]],[21,21],[56,56]]],[1572420101623,["sirui-php@DESKTOP-PSVFMK8",[[1,3,"1. "]],[3,3],[6,6]]],[1572420121476,["sirui-php@DESKTOP-PSVFMK8",[[-1,24,"不要在代码中执行"],[1,32,"在异步IO的程序中，**不得使用sleep/usleep/time_sleep_until/time_nanosleep**。（下文中使用"],[-1,39,"以及其他"],[1,43,"泛指所有"],[-1,47,"，这样会导致整个"],[1,55,"）\n\n*   `sleep`函数会使"],[1,57,"陷入睡眠"],[1,60,"*   直到指定的时间后操作系统才会重新唤醒当前的进程\n*   `sleep`过程中，只有信号可以打断\n*   由于`Swoole`的信号处理是基于`signalfd`实现的，所以即使发送信号也无法中断`sleep`\n\n`Swoole`提供的`swoole_event_add`、`swoole_timer_tick`、`swoole_timer_after`、`swoole_process::signal`、`异步swoole_client` 在进程sleep后会停止工作。`swoole_server`也无法再处理新的请求。\n"]],[24,59],[400,400]]],[1572420175913,["sirui-php@DESKTOP-PSVFMK8",[[1,401,"\n"]],[400,400],[401,401]]],[1572420176166,["sirui-php@DESKTOP-PSVFMK8",[[1,402,"\n"]],[401,401],[402,402]]],[1572420177032,["sirui-php@DESKTOP-PSVFMK8",[[-1,358," "],[1,359," "],[-1,402,"\n"],[1,403,"#"]],[402,402],[403,403]]],[1572420211792,["sirui-php@DESKTOP-PSVFMK8",[[1,403,"# 2. `exit/die`是危险的，会导致`Worker`进程退出"]],[403,403],[438,438]]],[1572420223159,["sirui-php@DESKTOP-PSVFMK8",[[-1,408,"`exit/die`是危险的，会导致`Worker`进程退出"]],[408,438],[408,408]]],[1572420224591,["sirui-php@DESKTOP-PSVFMK8",[[1,408,"jinz"]],[408,408],[412,412]]],[1572420225326,["sirui-php@DESKTOP-PSVFMK8",[[-1,408,"jinz"]],[412,412],[408,408]]],[1572420233884,["sirui-php@DESKTOP-PSVFMK8",[[1,408,"shiyo"]],[408,408],[413,413]]],[1572420234719,["sirui-php@DESKTOP-PSVFMK8",[[-1,408,"shiyo"]],[413,413],[408,408]]],[1572420248873,["sirui-php@DESKTOP-PSVFMK8",[[1,408,"使用Exit/Die是危险的"]],[408,408],[422,422]]],[1572420249448,["sirui-php@DESKTOP-PSVFMK8",[[-1,419,"危险的"]],[422,422],[419,419]]],[1572420251482,["sirui-php@DESKTOP-PSVFMK8",[[1,419,"问下"]],[419,419],[421,421]]],[1572420252542,["sirui-php@DESKTOP-PSVFMK8",[[-1,418,"是问下"]],[421,421],[418,418]]],[1572420261052,["sirui-php@DESKTOP-PSVFMK8",[[1,418,"会导致Worker进程退出"]],[418,418],[431,431]]],[1572420266872,["sirui-php@DESKTOP-PSVFMK8",[[1,431,"\n\n"]],[431,431],[432,432]]],[1572420267246,["sirui-php@DESKTOP-PSVFMK8",[[1,433,"\n"]],[432,432],[433,433]]],[1572420336553,["sirui-php@DESKTOP-PSVFMK8",[[1,433,"在swoole程序中禁止使用exit/die，如果PHP代码中有`exit/die`，当前工作的Worker进程、Task进程、User进程、以及`swoole_process`进程会立即退出。\n\n使用exit/die后Worker进程会因为异常退出, 被master进程再次拉起, 最终造成进程不断退出又不断启动和产生大量警报日志.\n\n建议使用`try/catch`的方式替换`exit/die`，实现中断执行跳出`PHP`函数调用栈。\n\n```\nfunction swoole_exit($msg)\n{\n    //php-fpm的环境\n    if (ENV=='php')\n    {\n        exit($msg);\n    }\n    //swoole的环境\n    else\n    {\n        throw new Swoole\\ExitException($msg);\n    }\n}\n\n```\n\n> 以上代码并未实现`ENV`常量和`Swoole\\ExitException`，请自行实现\n\n异常处理的方式比`exit/die`更友好，因为异常是可控的，`exit/die`不可控。在最外层进行try/catch即可捕获异常，仅终止当前的任务。Worker进程可以继续处理新的请求，而`exit/die`会导致进程直接退出，当前进程保存的所有变量和资源都会被销毁。如果进程内还有其他任务要处理，遇到`exit/die`也将全部丢弃。"]],[433,433],[1065,1065]]],[1572420583089,["sirui-php@DESKTOP-PSVFMK8",[[1,1066,"\n"]],[1065,1065],[1066,1066]]],[1572420583262,["sirui-php@DESKTOP-PSVFMK8",[[1,1067,"\n"]],[1066,1066],[1067,1067]]],[1572420583810,["sirui-php@DESKTOP-PSVFMK8",[[-1,1067,"\n"],[1,1068,"#"]],[1067,1067],[1068,1068]]],[1572420585272,["sirui-php@DESKTOP-PSVFMK8",[[1,1068,"# 3.通过`register_shutdown_function`来捕获致命错误"]],[1068,1068],[1109,1109]]],[1572420588604,["sirui-php@DESKTOP-PSVFMK8",[[-1,1101,"`"]],[1102,1102],[1101,1101]]],[1572420591320,["sirui-php@DESKTOP-PSVFMK8",[[-1,1074,"`"]],[1075,1075],[1074,1074]]],[1572420592977,["sirui-php@DESKTOP-PSVFMK8",[[1,1107,"\n\n"]],[1107,1107],[1108,1108]]],[1572420593158,["sirui-php@DESKTOP-PSVFMK8",[[1,1109,"\n"]],[1108,1108],[1109,1109]]],[1572420605455,["sirui-php@DESKTOP-PSVFMK8",[[1,1109,"Server运行期一旦发生致命错误，那客户端连接将无法得到回应。如Web服务器，如果有致命错误应当向客户端发送Http 500 错误信息。\n\n在PHP中可以通过register_shutdown_function + error_get_last 2个函数来捕获致命错误，并将错误信息发送给客户端连接。具体代码示例如下：\n\n```\nregister_shutdown_function('handleFatal');\n\nfunction handleFatal()\n{\n    $error = error_get_last();\n    switch ($error['type'] ?? null) {\n        case E_ERROR :\n        case E_PARSE :\n        case E_CORE_ERROR :\n        case E_COMPILE_ERROR :\n            $message = $error['message'] . PHP_EOL;\n            if (isset($_SERVER['REQUEST_URI'])) {\n                $message .= '[QUERY] ' . $_SERVER['REQUEST_URI'];\n            }\n            // log or send:\n            // error_log($message);\n            // $server->send($fd, $message);\n            break;\n    }\n}\n```"]],[1109,1109],[1839,1839]]],[1572420716664,["sirui-php@DESKTOP-PSVFMK8",[[1,1840,"\n"]],[1839,1839],[1840,1840]]],[1572420716993,["sirui-php@DESKTOP-PSVFMK8",[[1,1841,"\n"]],[1840,1840],[1841,1841]]],[1572420717503,["sirui-php@DESKTOP-PSVFMK8",[[-1,1841,"\n"],[1,1842,"#"]],[1841,1841],[1842,1842]]],[1572420718978,["sirui-php@DESKTOP-PSVFMK8",[[1,1842,"# 4，`PHP`代码中如果有异常抛出，必须在回调函数中进行`try/catch`捕获异常，否则会导致工作进程退出"]],[1842,1842],[1899,1899]]],[1572420719541,["sirui-php@DESKTOP-PSVFMK8",[[-1,1842,"# 4，`PHP`代码中如果有异常抛出，必须在回调函数中进行`try/catch`捕获异常，否则会导致工作进程退出"]],[1899,1899],[1842,1842]]],[1572420719733,["sirui-php@DESKTOP-PSVFMK8",[[-1,1841,"#"],[1,1842,"\n"]],[1842,1842],[1841,1841]]],[1572420721230,["sirui-php@DESKTOP-PSVFMK8",[[-1,1841,"\n"],[1,1842,"#"]],[1841,1841],[1842,1842]]],[1572420722455,["sirui-php@DESKTOP-PSVFMK8",[[1,1842,"# 。"]],[1842,1842],[1845,1845]]],[1572420723098,["sirui-php@DESKTOP-PSVFMK8",[[-1,1844,"。"]],[1845,1845],[1844,1844]]],[1572420724568,["sirui-php@DESKTOP-PSVFMK8",[[1,1844,"4.`PHP`代码中如果有异常抛出，必须在回调函数中进行`try/catch`捕获异常，否则会导致工作进程退出"]],[1844,1844],[1899,1899]]],[1572420729344,["sirui-php@DESKTOP-PSVFMK8",[[-1,1846,"`PHP`"]],[1846,1851],[1846,1846]]],[1572420732804,["sirui-php@DESKTOP-PSVFMK8",[[-1,1867,"`"]],[1868,1868],[1867,1867]]],[1572420735092,["sirui-php@DESKTOP-PSVFMK8",[[-1,1876,"`"]],[1877,1877],[1876,1876]]],[1572420735733,["sirui-php@DESKTOP-PSVFMK8",[[1,1892,"\n\n"]],[1892,1892],[1893,1893]]],[1572420736142,["sirui-php@DESKTOP-PSVFMK8",[[1,1894,"\n"]],[1893,1893],[1894,1894]]],[1572420736530,["sirui-php@DESKTOP-PSVFMK8",[[-1,1894,"\n"],[1,1895,"#"]],[1894,1894],[1895,1895]]],[1572420741959,["sirui-php@DESKTOP-PSVFMK8",[[1,1895,"# 5.不支持`set_exception_handler`，必须使用`try/catch`方式处理异常"]],[1895,1895],[1947,1947]]],[1572420744091,["sirui-php@DESKTOP-PSVFMK8",[[1,1899," "]],[1899,1899],[1900,1900]]],[1572420746012,["sirui-php@DESKTOP-PSVFMK8",[[-1,1903,"`"]],[1904,1904],[1903,1903]]],[1572420748615,["sirui-php@DESKTOP-PSVFMK8",[[-1,1924,"`"]],[1925,1925],[1924,1924]]],[1572420751045,["sirui-php@DESKTOP-PSVFMK8",[[-1,1929,"`"]],[1930,1930],[1929,1929]]],[1572420752853,["sirui-php@DESKTOP-PSVFMK8",[[-1,1938,"`"]],[1939,1939],[1938,1938]]],[1572420991541,["sirui-php@DESKTOP-PSVFMK8",[[1,1944,"\n\n"]],[1944,1944],[1945,1945]]],[1572420991743,["sirui-php@DESKTOP-PSVFMK8",[[1,1946,"\n"]],[1945,1945],[1946,1946]]],[1572420992023,["sirui-php@DESKTOP-PSVFMK8",[[-1,1946,"\n"],[1,1947,"#"]],[1946,1946],[1947,1947]]],[1572420992697,["sirui-php@DESKTOP-PSVFMK8",[[1,1947,"# "]],[1947,1947],[1949,1949]]],[1572420994390,["sirui-php@DESKTOP-PSVFMK8",[[1,1949,"6. `Worker`进程不得共用同一个`Redis`或`MySQL`等网络服务客户端"]],[1949,1949],[1992,1992]]],[1572420996213,["sirui-php@DESKTOP-PSVFMK8",[[-1,1951," "]],[1952,1952],[1951,1951]]],[1572420996816,["sirui-php@DESKTOP-PSVFMK8",[[1,1951," "]],[1951,1951],[1952,1952]]],[1572420997304,["sirui-php@DESKTOP-PSVFMK8",[[-1,1952,"`"]],[1953,1953],[1952,1952]]],[1572420999286,["sirui-php@DESKTOP-PSVFMK8",[[-1,1958,"`"]],[1958,1958],[1958,1958]]],[1572421002734,["sirui-php@DESKTOP-PSVFMK8",[[-1,1967,"`"]],[1967,1967],[1967,1967]]],[1572421004221,["sirui-php@DESKTOP-PSVFMK8",[[-1,1972,"`"]],[1972,1972],[1972,1972]]],[1572421005486,["sirui-php@DESKTOP-PSVFMK8",[[-1,1973,"`"]],[1973,1973],[1973,1973]]],[1572421007188,["sirui-php@DESKTOP-PSVFMK8",[[-1,1978,"`"]],[1978,1978],[1978,1978]]],[1572421009448,["sirui-php@DESKTOP-PSVFMK8",[[1,1986,"\n\n"]],[1986,1986],[1987,1987]]],[1572421087264,["sirui-php@DESKTOP-PSVFMK8",[[1,1987,"绝对不可以。必须每个进程单独创建`Redis`、`MySQL`、`PDO`连接，其他的存储客户端同样也是如此。原因是如果共用1个连接，那么返回的结果无法保证被哪个进程处理。持有连接的进程理论上都可以对这个连接进行读写，这样数据就发生错乱了。\n\n**所以在多个进程之间，一定不能共用连接**\n\n*   在`swoole_server`中，应当在`onWorkerStart`中创建连接对象\n*   在`swoole_process`中，应当在`swoole_process->start`后，子进程的回调函数中创建连接对象\n*   本页面所述信息对使用`pcntl_fork`的程序同样有效\n\n## 示例\n\n```\n$serv = new swoole_server(\"0.0.0.0\", 9502);\n\n//必须在onWorkerStart回调中创建redis/mysql连接\n$serv->on('workerstart', function($serv, $id) {\n    $redis = new redis;\n    $redis->connect('127.0.0.1', 6379);\n    $serv->redis = $redis;\n});\n\n$serv->on('receive', function (swoole_server $serv, $fd, $from_id, $data) { \n    $value = $serv->redis->get(\"key\");\n    $serv->send($fd, \"Swoole: \".$value);\n});\n\n$serv->start();\n```"]],[1987,1987],[2701,2701]]],[1572421095636,["sirui-php@DESKTOP-PSVFMK8",[[1,1992,"# 共用1个redis或mysql连接"]],[1992,1992],[2011,2011]]],[1572421140877,["sirui-php@DESKTOP-PSVFMK8",[[1,1987,"\n"]],[1986,1986],[1987,1987]]],[1572421143308,["sirui-php@DESKTOP-PSVFMK8",[[1,2722,"\n"]],[2721,2721],[2722,2722]]],[1572421143743,["sirui-php@DESKTOP-PSVFMK8",[[1,2723,"\n"]],[2722,2722],[2723,2723]]],[1572421144294,["sirui-php@DESKTOP-PSVFMK8",[[-1,2723,"\n"],[1,2724,"#"]],[2723,2723],[2724,2724]]],[1572421146334,["sirui-php@DESKTOP-PSVFMK8",[[1,2724,"# 7."]],[2724,2724],[2728,2728]]],[1572421146869,["sirui-php@DESKTOP-PSVFMK8",[[1,2725,"#"]],[2728,2728],[2729,2729]]],[1572421167679,["sirui-php@DESKTOP-PSVFMK8",[[-1,2725,"# 7."]],[2729,2729],[2725,2725]]],[1572421172250,["sirui-php@DESKTOP-PSVFMK8",[[1,2725," 7.## 异步编程"]],[2725,2725],[2735,2735]]],[1572421173158,["sirui-php@DESKTOP-PSVFMK8",[[-1,2725," 7.## 异步编程"]],[2735,2735],[2725,2725]]],[1572421177656,["sirui-php@DESKTOP-PSVFMK8",[[1,2725," 7. 异步编程"]],[2725,2725],[2733,2733]]],[1572421178093,["sirui-php@DESKTOP-PSVFMK8",[[1,2733,"\n\n"]],[2733,2733],[2734,2734]]],[1572421181814,["sirui-php@DESKTOP-PSVFMK8",[[1,2734,"*   异步程序要求代码中不得包含任何同步阻塞操作\n*   **异步与同步代码不能混用，一旦应用程序使用了任何同步阻塞的代码，程序即退化为同步模式**"]],[2734,2734],[2809,2809]]],[1572421183527,["sirui-php@DESKTOP-PSVFMK8",[[-1,2764,"**"]],[2766,2766],[2764,2764]]],[1572421184453,["sirui-php@DESKTOP-PSVFMK8",[[-1,2805,"**"]],[2807,2807],[2805,2805]]],[1572421185029,["sirui-php@DESKTOP-PSVFMK8",[[1,2806,"* \n"]],[2805,2805],[2808,2808]]],[1572421185214,["sirui-php@DESKTOP-PSVFMK8",[[-1,2806,"* "]],[2808,2808],[2807,2807]]],[1572421186602,["sirui-php@DESKTOP-PSVFMK8",[[1,2807,"\n"]],[2807,2807],[2808,2808]]],[1572421187809,["sirui-php@DESKTOP-PSVFMK8",[[-1,2807,"\n"],[1,2808,"#"]],[2808,2808],[2808,2808]]],[1572421189350,["sirui-php@DESKTOP-PSVFMK8",[[1,2808,"# 8.、"]],[2808,2808],[2813,2813]]],[1572421189943,["sirui-php@DESKTOP-PSVFMK8",[[-1,2812,"、"]],[2813,2813],[2812,2812]]],[1572421190439,["sirui-php@DESKTOP-PSVFMK8",[[1,2812," "]],[2812,2812],[2813,2813]]],[1572421200558,["sirui-php@DESKTOP-PSVFMK8",[[1,2813,"## 类/函数重复定义"]],[2813,2813],[2824,2824]]],[1572421204073,["sirui-php@DESKTOP-PSVFMK8",[[-1,2810,"8. ## 类/函数重复定义"]],[2824,2824],[2810,2810]]],[1572421204231,["sirui-php@DESKTOP-PSVFMK8",[[1,2810,"## 类/函数重复定义"]],[2810,2810],[2821,2821]]],[1572421205405,["sirui-php@DESKTOP-PSVFMK8",[[-1,2808,"# ## 类/函数重复定义"]],[2821,2821],[2808,2808]]],[1572421205589,["sirui-php@DESKTOP-PSVFMK8",[[-1,2807,"#"],[1,2808,"\n"]],[2808,2808],[2807,2807]]],[1572421205813,["sirui-php@DESKTOP-PSVFMK8",[[-1,2807,"\n"]],[2807,2807],[2806,2806]]],[1572421206369,["sirui-php@DESKTOP-PSVFMK8",[[1,2807,"\n"]],[2806,2806],[2807,2807]]],[1572421206600,["sirui-php@DESKTOP-PSVFMK8",[[1,2807,"## 类/函数重复定义"]],[2807,2807],[2818,2818]]],[1572421209687,["sirui-php@DESKTOP-PSVFMK8",[[1,2809,"8."]],[2809,2809],[2811,2811]]],[1572421210091,["sirui-php@DESKTOP-PSVFMK8",[[1,2812," "]],[2811,2811],[2812,2812]]],[1572421211607,["sirui-php@DESKTOP-PSVFMK8",[[1,2809," "]],[2809,2809],[2810,2810]]],[1572421216733,["sirui-php@DESKTOP-PSVFMK8",[[1,2823,"\n"]],[2822,2822],[2823,2823]]],[1572421217062,["sirui-php@DESKTOP-PSVFMK8",[[1,2823,"新手非常容易犯这个错误，由于`Swoole`是常驻内存的，所以加载类/函数定义的文件后不会释放。因此引入类/函数的php文件时必须要使用`include_once`或`require_once`，否则会发生`cannot redeclare function/class` 的致命错误。"]],[2823,2823],[2966,2966]]],[1572421219046,["sirui-php@DESKTOP-PSVFMK8",[[1,2823,"\n"]],[2822,2822],[2823,2823]]],[1572421221513,["sirui-php@DESKTOP-PSVFMK8",[[1,2734,"\n"]],[2733,2733],[2734,2734]]],[1572421410303,["sirui-php@DESKTOP-PSVFMK8",[[1,2969,"\n"]],[2968,2968],[2969,2969]]],[1572421410846,["sirui-php@DESKTOP-PSVFMK8",[[1,2970,"\n"]],[2969,2969],[2970,2970]]],[1572421411229,["sirui-php@DESKTOP-PSVFMK8",[[1,2970,"# while循环的影响"]],[2970,2970],[2982,2982]]],[1572421413209,["sirui-php@DESKTOP-PSVFMK8",[[-1,2961," "],[1,2962," "],[1,2970,"$"]],[2970,2970],[2971,2971]]],[1572421413234,["sirui-php@DESKTOP-PSVFMK8",[[1,2972,"#"]],[2971,2971],[2972,2972]]],[1572421414717,["sirui-php@DESKTOP-PSVFMK8",[[-1,2970,"$#"]],[2972,2972],[2970,2970]]],[1572421417551,["sirui-php@DESKTOP-PSVFMK8",[[1,2971,"#9."]],[2970,2970],[2974,2974]]],[1572421417785,["sirui-php@DESKTOP-PSVFMK8",[[1,2975," "]],[2974,2974],[2975,2975]]],[1572421418680,["sirui-php@DESKTOP-PSVFMK8",[[-1,2975," "]],[2975,2975],[2974,2974]]],[1572421419698,["sirui-php@DESKTOP-PSVFMK8",[[1,2972," "]],[2972,2972],[2973,2973]]],[1572421420501,["sirui-php@DESKTOP-PSVFMK8",[[1,2987,"\n"]],[2986,2986],[2987,2987]]],[1572421424815,["sirui-php@DESKTOP-PSVFMK8",[[1,2987,"异步程序如果遇到死循环，事件将无法触发。异步IO程序使用`Reactor模型`，运行过程中必须在`reactor->wait`处轮询。如果遇到死循环，那么程序的控制权就在while中了，`reactor`无法得到控制权，无法检测事件，所以IO事件回调函数也将无法触发。\n\n> 密集运算的代码没有任何IO操作，所以不能称为阻塞\n\n## 实例程序\n\n```\n$serv = new swoole_server(\"127.0.0.1\", 9501);\n$serv->set(['worker_num' => 1]);\n$serv->on('receive', function ($serv, $fd, $reactorId, $data) {\n    while(1)\n    {\n        $i ++;\n    }\n    $serv->send($fd, 'Swoole: '.$data);\n});\n$serv->start();\n\n```\n\n`onReceive`事件中执行了死循环，`server`无法再收到任何客户端请求，必须等待循环结束才能继续处理新的事件。"]],[2987,2987],[3474,3474]]],[1572421477336,["sirui-php@DESKTOP-PSVFMK8",[[1,3475,"\n"]],[3474,3474],[3475,3475]]],[1572421477477,["sirui-php@DESKTOP-PSVFMK8",[[1,3476,"\n"]],[3475,3475],[3476,3476]]],[1572421477648,["sirui-php@DESKTOP-PSVFMK8",[[1,3476,"# stat缓存清理"]],[3476,3476],[3486,3486]]],[1572421479719,["sirui-php@DESKTOP-PSVFMK8",[[1,3477,"#"]],[3476,3476],[3477,3477]]],[1572421482224,["sirui-php@DESKTOP-PSVFMK8",[[1,3479,"8. "]],[3479,3479],[3482,3482]]],[1572421483102,["sirui-php@DESKTOP-PSVFMK8",[[1,3491,"\n"]],[3490,3490],[3491,3491]]],[1572421486190,["sirui-php@DESKTOP-PSVFMK8",[[1,3491,"PHP底层对`stat`系统调用增加了`Cache`，在使用`stat`、`fstat`、`filemtime`等函数时，底层可能会命中缓存，返回历史数据。\n\n可以使用`clearstatcache`函数清理文件`stat`缓存。"]],[3491,3491],[3606,3606]]],[1572421486911,["sirui-php@DESKTOP-PSVFMK8",[[1,3607,"\n"]],[3606,3606],[3607,3607]]],[1572421487454,["sirui-php@DESKTOP-PSVFMK8",[[1,3608,"\n"]],[3607,3607],[3608,3608]]],[1572422006929,["sirui-php@DESKTOP-PSVFMK8",[[1,3608,"# mt_rand随机数"]],[3608,3608],[3620,3620]]],[1572422008126,["sirui-php@DESKTOP-PSVFMK8",[[1,3609,"#"]],[3609,3609],[3610,3610]]],[1572422008798,["sirui-php@DESKTOP-PSVFMK8",[[1,3611," "]],[3610,3610],[3611,3611]]],[1572422009801,["sirui-php@DESKTOP-PSVFMK8",[[1,3611,"9."]],[3611,3611],[3613,3613]]],[1572422011069,["sirui-php@DESKTOP-PSVFMK8",[[1,3625,"\n"]],[3624,3624],[3625,3625]]],[1572422015073,["sirui-php@DESKTOP-PSVFMK8",[[1,3625,"在`Swoole`中如果在父进程内调用了`mt_rand`，不同的子进程内再调用`mt_rand`返回的结果会是相同的。所以必须在每个子进程内调用`mt_srand`重新播种。\n\n> `shuffle`和`array_rand`等依赖随机数的`PHP`函数同样会受到影响\n\n```\nmt_rand(0, 1);\n//开始\n$worker_num = 16;\n\n// fork 进程\nfor($i = 0; $i < $worker_num; $i++) {\n    $process = new swoole_process('child_async', false, 2);\n    $pid = $process -> start();\n}\n\n//异步执行进程\nfunction child_async(swoole_process $worker) {\n    mt_srand();\n    echo mt_rand(0, 100).PHP_EOL;\n    $worker->exit();\n}\n```"]],[3625,3625],[4081,4081]]],[1572422016696,["sirui-php@DESKTOP-PSVFMK8",[[1,4082,"\n"]],[4081,4081],[4082,4082]]],[1572422016845,["sirui-php@DESKTOP-PSVFMK8",[[1,4083,"\n"]],[4082,4082],[4083,4083]]],[1572422317982,["sirui-php@DESKTOP-PSVFMK8",[[1,4083,"# 进程隔离"]],[4083,4083],[4089,4089]]],[1572422320384,["sirui-php@DESKTOP-PSVFMK8",[[1,4084,"#"]],[4084,4084],[4085,4085]]],[1572422321534,["sirui-php@DESKTOP-PSVFMK8",[[1,4086," "]],[4085,4085],[4086,4086]]],[1572422322288,["sirui-php@DESKTOP-PSVFMK8",[[1,4086,"10."]],[4086,4086],[4089,4089]]],[1572422328924,["sirui-php@DESKTOP-PSVFMK8",[[1,4095,"\n"]],[4094,4094],[4095,4095]]],[1572422329076,["sirui-php@DESKTOP-PSVFMK8",[[1,4096,"\n"]],[4095,4095],[4096,4096]]],[1572422329321,["sirui-php@DESKTOP-PSVFMK8",[[1,4096,"进程隔离也是很多新手经常遇到的问题。修改了全局变量的值，为什么不生效，原因就是全局变量在不同的进程，内存空间是隔离的，所以无效。所以使用`Swoole`开发`Server`程序需要了解`进程隔离`问题。\n\n*   不同的进程中PHP变量不是共享，即使是全局变量，在A进程内修改了它的值，在B进程内是无效的\n*   如果需要在不同的Worker进程内共享数据，可以用`Redis`、`MySQL`、`文件`、`Swoole\\Table`、`APCu`、`shmget`等工具实现\n*   不同进程的文件句柄是隔离的，所以在A进程创建的Socket连接或打开的文件，在B进程内是无效，即使是将它的fd发送到B进程也是不可用的\n\n#### 实例：\n\n```\n$server = new Swoole\\Http\\Server('127.0.0.1', 9500);\n\n$i = 1;\n\n$server->on('Request', function ($request, $response) {\n    global $i;\n    $response->end($i++);\n});\n\n$server->start();\n\n```\n\n在多进程的服务器中，`$i`变量虽然是全局变量(`global`)，但由于进程隔离的原因。假设有`4`个工作进程，在`进程1`中进行`$i++`，实际上只有`进程1`中的`$i`变成`2`了，其他另外`3`个进程内`$i`变量的值还是`1`。\n\n正确的做法是使用`Swoole`提供的`Swoole\\Atomic`或`Swoole\\Table`数据结构来保存数据。如上述代码可以使用`Swoole\\Atomic`实现。\n\n```\n$server = new Swoole\\Http\\Server('127.0.0.1', 9500);\n\n$atomic = new Swoole\\Atomic(1);\n\n$server->on('Request', function ($request, $response) use ($atomic) {\n    $response->end($atomic->add(1));\n});\n\n$server->start();\n\n```\n\n*   `Swoole\\Atomic`数据是建立在共享内存之上的，使用`add`方法加`1`时，在其他工作进程内也是有效的"]],[4096,4096],[5110,5110]]],[1572422414276,["sirui-php@DESKTOP-PSVFMK8",[[1,5111,"* \n"]],[5110,5110],[5113,5113]]],[1572422414405,["sirui-php@DESKTOP-PSVFMK8",[[-1,5111,"* "]],[5113,5113],[5112,5112]]],[1572422414566,["sirui-php@DESKTOP-PSVFMK8",[[1,5112,"# 捕获异常和错误\n\n## 可捕获的异常/错误\n\n在`PHP`大致有三种类型的可捕获的异常/错误\n\n1.  `Error`：`PHP`内核抛出错误的专用类型, 如类不存在, 函数不存在, 函数参数错误, 都会抛出此类型的错误, `PHP`代码中不应该使用`Error类`来作为异常抛出\n2.  `Exception`：应用开发者应该使用的异常基类\n3.  `ErrorException`：此异常基类专门负责将`PHP`的`Warning`/`Notice`等信息通过`set_error_handler`转换成异常, PHP未来的规划必然是将所有的`Warning`/`Notice`转为异常, 以便于`PHP`程序能够更好更可控地处理各种错误\n\n> 以上所有类都实现了`Throwable`接口, 也就是说, 通过`try {} catch(Throwable $e) {}` 即可捕获所有可抛出的异常/错误\n\n#### 实例 1\n\n```\ntry {\n    test();\n} \ncatch(Throwable $e) {\n    var_dump($e);\n}\n\n```\n\n#### 实例 2\n\n```\ntry {\n    test();\n}\ncatch (Error $e) {\n    var_dump($e);\n}\ncatch(Exception $e) {\n    var_dump($e);\n}\n\n```\n\n## 不可捕获的致命错误和异常\n\n`PHP`错误的一个重要级别, 如异常/错误未捕获时, 内存不足时, 或是一些编译期错误(继承的类不存在), 将会以`E_ERROR`级别抛出一个`Fatal Error`, 是在程序发生不可回溯的错误时才会触发的, `PHP`程序无法捕获这样级别的一种错误, 只能通过`register_shutdown_function`在后续进行一些处理操作。\n\n## 在协程中捕获运行时异常/错误\n\n在`Swoole4`协程编程中，某个协程的代码中抛出错误，会导致整个进程退出，进程所有协程终止执行。在协程顶层空间可以先进行一次`try/catch`捕获异常/错误。仅终止出错的协程。\n\n```\ngo(function () {\n    try {\n        call_user_func($func);\n    }\n    catch (Error $e) {\n        var_dump($e);\n    }\n    catch(Exception $e) {\n        var_dump($e);\n    }\n});\n\n//协程1的错误不影响协程2\ngo(function () {\n    Co::sleep(100);\n});\n```"]],[5112,5112],[6270,6270]]],[1572422416858,["sirui-php@DESKTOP-PSVFMK8",[[1,5113,"#"],[-1,5122,""],[-1,5225," "],[1,5226," "],[-1,5502," "],[1,5503," "],[-1,5851," "],[1,5852," "]],[5113,5113],[5114,5114]]],[1572422421471,["sirui-php@DESKTOP-PSVFMK8",[[1,5114,"#11."]],[5114,5114],[5118,5118]]],[1572422423448,["sirui-php@DESKTOP-PSVFMK8",[[1,5115," "]],[5115,5115],[5116,5116]]],[1572422442236,["sirui-php@DESKTOP-PSVFMK8",[[1,5132,"11."]],[5132,5132],[5135,5135]]],[1572422444620,["sirui-php@DESKTOP-PSVFMK8",[[-1,5128,"\n"]],[5127,5127],[5127,5127]]],[1572422445435,["sirui-php@DESKTOP-PSVFMK8",[[-1,5127,"\n"]],[5127,5127],[5127,5127]]],[1572422446195,["sirui-php@DESKTOP-PSVFMK8",[[1,5127,"\n"]],[5127,5127],[5127,5127]]],[1572422448507,["sirui-php@DESKTOP-PSVFMK8",[[-1,5112,"### 11. 捕获异常和错误"]],[5127,5127],[5112,5112]]],[1572422448899,["sirui-php@DESKTOP-PSVFMK8",[[-1,5112,"\n"]],[5112,5112],[5111,5111]]],[1572422452887,["sirui-php@DESKTOP-PSVFMK8",[[1,5720,"#"]],[5720,5720],[5721,5721]]],[1572422454196,["sirui-php@DESKTOP-PSVFMK8",[[1,5915,"#"]],[5915,5915],[5916,5916]]]],null,"sirui-php@DESKTOP-PSVFMK8"]]}