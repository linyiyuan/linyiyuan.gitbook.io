{"compress":true,"commitItems":[["4fee81fe-6d04-4e48-9d29-caf9fe15ce64",1565755534386,"",[[1565755525984,["sirui-php@DESKTOP-PSVFMK8",[[1,0,"# 接口\n\n\n\n"]],[0,0],[7,7]]],[1565755532978,["sirui-php@DESKTOP-PSVFMK8",[[1,7,"PHP与大多数面向对象编程语言一样，不支持多重继承。也就是说每个类只能继承一个父类。为了解决这个问题，PHP引入了接口，接口的思想是指定了一个实现了该接口的类必须实现的一系列方法。接口是一种特殊的抽象类，抽象类又是一种特殊的类，所以接口也是一种特殊的类，为 什么说接口是一种特殊的抽象类呢？如果一个抽象类里面的所有的方法都是抽象方法，那么我们就换一种声明方法使用“接口”；也就是说接口里面所有的方法必须 都是声明为抽象方法，另外接口里面不能声明变量(但可声明常量constant)，而且接口里面所有的成员都是public权限的。所以子类在实现的时候 也一定要使用public权限实限。\n\n声明一个类的时候我们使用的关键字是“class”，而接口一种特殊的类，使用的关键字是“interface”;\n\n类的定义：\n\n```\nclass 类名{ … } ，\n\n```\n\n接口的声明：\n\n```\ninterface 接口名{ …}\n\n```\n\n举例：\n\n```\n1\t<?php\n2\t//定义一个接口使用interface关键字，“One”为接口名称\n3\tinterface One\n4\t{\n5\t    //定义一个常量\n6\t    const constant = 'constant value';\n7\n8\t    //定义了一个抽象方法”fun1”\n9\t    public function fun1();\n10\n11\t    //定义了抽象方法”fun2”\n12\t    public function fun2();\n13\t}\n14\t?>\n\n```\n\n上例中定义了一个接口“one”，里面声明了两个抽象方法“fun1”和”fun2”，因为接口里面所有的方法都是抽象方法，所以在声明抽象方法的时候就不用像抽象类那样使用“abstract”这个关键字了，默认的已经加上这个关键字，另外在接口里边的”public”这个访问权限也可以去掉，因 为默认就是public的，因为接口里所有成员都要是公有的，所在对于接口里面的成员我们就不能使用“private”的和“protected”的权限 了，都要用public或是默认的。另外在接口里面我们也声明了一个常量“constant“， 因为在接口里面不能用变量成员，所以我们要使用 const这个关键字声明。\n\n因为接口是一种特殊的抽象类，里面所有的方法都是抽象方法，所以接口也不能产生实例对象; 它也做为一种规范，所有抽象方法需要子类去实现。\n\n我们可以使用”extends”关键字让一个接口去继承另一个接口：\n\n```\n1\t<?php\n2\t//使用”extends”继承另外一个接口\n3\tinterface Two extends One\n4\t{\n5\t    function fun3();\n6\t    function fun4();\n7\t}\n8\t?>\n\n```\n\n而我们定义一接口的子类去实现接口中全部抽象方法使用的关键字是“implements”，而不是我们前面所说的“extends”;\n\n```\n1\t<?php\n2\t//使用“implements”这个关键字去实现接口中的抽象方法 接口和类之间\n3\tclass Three implements One\n4\t{\n5\t    function fun1() {\n6\t        ...\n7\t    }\n8\n9\t    function fun2() {\n10\t        ...\n11\t    }\n12\t}\n13\n14\t//实现了全部方法，我们去可以使用子类去实例化对象了\n15\t$three=new Three();\n16\t?>\n\n```\n\n我们也可以使用抽象类，去实现接口中的部分抽象方法，但要想实例化对象，这个抽象类还要有子类把它所有的抽象方法都实现才行；\n\n在前面我们说过，PHP是单继承的，一个类只能有一父类，但是一个类可以实现多个接口，就相当于一个类要遵守多个规范，就像我们不仅要遵守国家的法律，如果是在学校的话，还要遵守学校的校规一样；\n\n```\n1\t<?php\n2\t//使用implements实现多个接口\n3\tclass Four implemtns 接口一, 接口二, ...\n4\t{\n5\t    //必须把所有接口中的方法都要实现才可以实例化对象。\n6\t}\n7\t?>\n\n```\n\nPHP中不仅一个类可以实现多个接口，也可以在继承一个类的同时实现多个接口, 一定要先继承类再去实现接口；\n\n```\n1\t<?php\n2\t//使用extends继承一个类，使用implements实现多个接口\n3\tclass Four extends 类名一 implemtns 接口一, 接口二, ...\n4\t{\n5\t    //所有接口中的方法都要实现才可以实例化对象\n6\t    ...\n7\t}\n8\t?>\n```"]],[7,7],[2023,2023]]],[1565755533624,["sirui-php@DESKTOP-PSVFMK8",[[-1,0,"# 接口\n\n\n"],[-1,2023,"\n"]],[0,2024],[2016,2016]]]],null,"sirui-php@DESKTOP-PSVFMK8"]]}