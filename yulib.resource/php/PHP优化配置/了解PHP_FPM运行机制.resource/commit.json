{"compress":true,"commitItems":[["cf82ded4-90a8-44fd-8c84-0d266bb2cb5f",1583285035314,"",[[1583284976595,["Administrator@YLMF-2019OEFIPO",[[1,0,"# 了解PHP_FPM运行机制\n\n\n\n"]],[0,0],[18,18]]],[1583285424117,["Administrator@YLMF-2019OEFIPO",[[-1,18,"\n"],[1,19,"#"]],[18,18],[19,19]]],[1583285426253,["Administrator@YLMF-2019OEFIPO",[[1,19,"# CGI"]],[19,19],[24,24]]],[1583285426677,["Administrator@YLMF-2019OEFIPO",[[1,24,"\n\n"]],[24,24],[25,25]]],[1583285427122,["Administrator@YLMF-2019OEFIPO",[[1,26,"\n"]],[25,25],[26,26]]],[1583285433635,["Administrator@YLMF-2019OEFIPO",[[1,26,"web server（比如说[nginx](https://www.baidu.com/s?wd=nginx&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)）只是内容的分发者。比如，如果请求`/index.html`，那么web server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。好了，如果现在请求的是`/index.php`，根据配置文件，nginx知道这个不是静态文件，需要去找PHP解析器来处理，那么他会把这个请求简单处理后交给PHP解析器。Nginx会传哪些数据给PHP解析器呢？url要有吧，查询字符串也得有吧，POST数据也要有，HTTP header不能少吧，好的，CGI就是规定要传哪些数据、以什么样的格式传递给后方处理这个请求的协议。仔细想想，你在PHP代码中使用的用户从哪里来的。\n\n当web server收到`/index.php`这个请求后，会启动对应的CGI程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程。web server再把结果返回给浏览器。"]],[26,26],[546,546]]],[1583285455067,["Administrator@YLMF-2019OEFIPO",[[1,547,"\n"]],[546,546],[547,547]]],[1583285455312,["Administrator@YLMF-2019OEFIPO",[[1,548,"\n"]],[547,547],[548,548]]],[1583285455646,["Administrator@YLMF-2019OEFIPO",[[-1,548,"\n"],[1,549,"#"]],[548,548],[549,549]]],[1583285460101,["Administrator@YLMF-2019OEFIPO",[[1,549,"# Fastcgi"]],[549,549],[558,558]]],[1583285463768,["Administrator@YLMF-2019OEFIPO",[[1,558,"\n\n"]],[558,558],[559,559]]],[1583285464000,["Administrator@YLMF-2019OEFIPO",[[1,560,"\n"]],[559,559],[560,560]]],[1583285464229,["Administrator@YLMF-2019OEFIPO",[[1,560,"提高性能，那么CGI程序的性能问题[在哪](https://www.baidu.com/s?wd=%E5%9C%A8%E5%93%AA&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)呢？\"PHP解析器会解析php.ini文件，初始化执行环境\"，就是这里了。标准的CGI对每个请求都会执行这些步骤（不闲累啊！启动进程很累的说！），所以处理每个时间的时间会比较长。这明显不合理嘛！那么Fastcgi是怎么做的呢？首先，Fastcgi会先启一个master，解析配置文件，初始化执行环境，然后再启动多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是fastcgi的对进程的管理。"]],[560,560],[986,986]]],[1583285481777,["Administrator@YLMF-2019OEFIPO",[[1,987,"\n"]],[986,986],[987,987]]],[1583285481916,["Administrator@YLMF-2019OEFIPO",[[1,988,"\n"]],[987,987],[988,988]]],[1583285482156,["Administrator@YLMF-2019OEFIPO",[[-1,988,"\n"],[1,989,"#"]],[988,988],[989,989]]],[1583285486285,["Administrator@YLMF-2019OEFIPO",[[1,989,"# PHP-FPM"]],[989,989],[998,998]]],[1583285490489,["Administrator@YLMF-2019OEFIPO",[[1,998,"\n\n"]],[998,998],[999,999]]],[1583285490649,["Administrator@YLMF-2019OEFIPO",[[1,1000,"\n"]],[999,999],[1000,1000]]],[1583285490801,["Administrator@YLMF-2019OEFIPO",[[1,1000,"大家都知道，PHP的解释器是php-cgi。php-cgi只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理（皇上，臣妾真的做不到啊！）所以就出现了一些能够调度php-cgi进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。好了PHP-FPM也是这么个东东，在长时间的发展后，逐渐得到了大家的认可（要知道，前几年大家可是抱怨PHP-FPM稳定性太差的），也越来越流行。"]],[1000,1000],[1202,1202]]],[1583285498857,["Administrator@YLMF-2019OEFIPO",[[1,1203,"\n"]],[1202,1202],[1203,1203]]],[1583285499009,["Administrator@YLMF-2019OEFIPO",[[1,1204,"\n"]],[1203,1203],[1204,1204]]],[1583285499160,["Administrator@YLMF-2019OEFIPO",[[1,1205,"\n"]],[1204,1204],[1205,1205]]],[1583285513227,["Administrator@YLMF-2019OEFIPO",[[-1,1205,"\n"],[1,1206,"z"]],[1205,1205],[1206,1206]]],[1583285513587,["Administrator@YLMF-2019OEFIPO",[[1,1206,"ong"]],[1206,1206],[1209,1209]]],[1583285514248,["Administrator@YLMF-2019OEFIPO",[[-1,1206,"ong"]],[1209,1209],[1206,1206]]],[1583285514389,["Administrator@YLMF-2019OEFIPO",[[-1,1205,"z"],[1,1206,"\n"]],[1206,1206],[1205,1205]]],[1583285515709,["Administrator@YLMF-2019OEFIPO",[[-1,1205,"\n"],[1,1206,"总结"]],[1205,1205],[1207,1207]]],[1583285518373,["Administrator@YLMF-2019OEFIPO",[[1,1205,"## "]],[1205,1205],[1208,1208]]],[1583285519481,["Administrator@YLMF-2019OEFIPO",[[1,1210,"\n\n"]],[1210,1210],[1211,1211]]],[1583285519617,["Administrator@YLMF-2019OEFIPO",[[1,1212,"\n"]],[1211,1211],[1212,1212]]],[1583285523673,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"\n"],[1,1213,"fast'"]],[1212,1212],[1217,1217]]],[1583285525725,["Administrator@YLMF-2019OEFIPO",[[-1,1213,"ast'"]],[1217,1217],[1213,1213]]],[1583285525873,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"f"],[1,1213,"\n"]],[1213,1213],[1212,1212]]],[1583285527028,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"\n"],[1,1213,"fast"]],[1212,1212],[1216,1216]]],[1583285528558,["Administrator@YLMF-2019OEFIPO",[[-1,1213,"ast"]],[1216,1216],[1213,1213]]],[1583285528778,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"f"],[1,1213,"\n"]],[1213,1213],[1212,1212]]],[1583285529623,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"\n"],[1,1213,"C"]],[1212,1212],[1213,1213]]],[1583285540358,["Administrator@YLMF-2019OEFIPO",[[1,1213,"GI是一个是webserver和web应用程序交流时的一组接口规范。"]],[1213,1213],[1247,1247]]],[1583285548856,["Administrator@YLMF-2019OEFIPO",[[-1,1216,"一个是"]],[1218,1218],[1215,1215]]],[1583285550466,["Administrator@YLMF-2019OEFIPO",[[1,1212,"·"]],[1212,1212],[1213,1213]]],[1583285552940,["Administrator@YLMF-2019OEFIPO",[[-1,1212,"·"]],[1213,1213],[1212,1212]]],[1583285553365,["Administrator@YLMF-2019OEFIPO",[[1,1212,"`"]],[1212,1212],[1213,1213]]],[1583285554745,["Administrator@YLMF-2019OEFIPO",[[1,1216,"` "]],[1216,1216],[1218,1218]]],[1583285569721,["Administrator@YLMF-2019OEFIPO",[[1,1247,"zai"]],[1247,1247],[1250,1250]]],[1583285570304,["Administrator@YLMF-2019OEFIPO",[[-1,1248,"ai"]],[1250,1250],[1248,1248]]],[1583285570317,["Administrator@YLMF-2019OEFIPO",[[1,1248,"="]],[1248,1248],[1249,1249]]],[1583285571032,["Administrator@YLMF-2019OEFIPO",[[-1,1247,"z="]],[1249,1249],[1247,1247]]],[1583285573297,["Administrator@YLMF-2019OEFIPO",[[1,1247,"在未出现"]],[1247,1247],[1251,1251]]],[1583285576118,["Administrator@YLMF-2019OEFIPO",[[1,1251,"PHP-"]],[1251,1251],[1255,1255]]],[1583285577099,["Administrator@YLMF-2019OEFIPO",[[-1,1251,"PHP-"]],[1255,1255],[1251,1251]]],[1583285577682,["Administrator@YLMF-2019OEFIPO",[[1,1251,"··"]],[1251,1251],[1253,1253]]],[1583285578389,["Administrator@YLMF-2019OEFIPO",[[-1,1251,"··"]],[1253,1253],[1251,1251]]],[1583285578885,["Administrator@YLMF-2019OEFIPO",[[1,1251,"``"]],[1251,1251],[1253,1253]]],[1583285582542,["Administrator@YLMF-2019OEFIPO",[[1,1252,"PHP-Fpm"]],[1252,1252],[1259,1259]]],[1583285583596,["Administrator@YLMF-2019OEFIPO",[[-1,1256,"Fpm"]],[1259,1259],[1256,1256]]],[1583285584630,["Administrator@YLMF-2019OEFIPO",[[1,1256,"FPM"]],[1256,1256],[1259,1259]]],[1583285590613,["Administrator@YLMF-2019OEFIPO",[[1,1260," 之前，我们搜友级"]],[1260,1260],[1269,1269]]],[1583285591130,["Administrator@YLMF-2019OEFIPO",[[-1,1266,"搜友级"]],[1269,1269],[1266,1266]]],[1583285592195,["Administrator@YLMF-2019OEFIPO",[[1,1266,"秦穆公求"]],[1266,1266],[1270,1270]]],[1583285592965,["Administrator@YLMF-2019OEFIPO",[[-1,1266,"秦穆公求"]],[1270,1270],[1266,1266]]],[1583285598724,["Administrator@YLMF-2019OEFIPO",[[1,1266,"请求web服务器，伟宝"]],[1266,1266],[1277,1277]]],[1583285600116,["Administrator@YLMF-2019OEFIPO",[[-1,1275,"伟宝"]],[1277,1277],[1275,1275]]],[1583285635300,["Administrator@YLMF-2019OEFIPO",[[1,1275,"web服务器需要解析PHP文件就会临时启动一个cgi解释器，通过cgi协议"]],[1275,1275],[1312,1312]]],[1583285643738,["Administrator@YLMF-2019OEFIPO",[[1,1312,"转发要云心的"]],[1312,1312],[1318,1318]]],[1583285644196,["Administrator@YLMF-2019OEFIPO",[[-1,1315,"云心的"]],[1318,1318],[1315,1315]]],[1583285653496,["Administrator@YLMF-2019OEFIPO",[[1,1315,"运行的内容，当cgi脚本技术"]],[1315,1315],[1329,1329]]],[1583285655205,["Administrator@YLMF-2019OEFIPO",[[-1,1327,"技术"]],[1329,1329],[1327,1327]]],[1583285669653,["Administrator@YLMF-2019OEFIPO",[[1,1327,"结束后将结果返回给web服务器，然后这个cgi解释器就会自由"]],[1327,1327],[1357,1357]]],[1583285672513,["Administrator@YLMF-2019OEFIPO",[[-1,1353,"就会自由"]],[1357,1357],[1353,1353]]],[1583285682674,["Administrator@YLMF-2019OEFIPO",[[1,1353,"进程就会自我销毁，加入由1000"]],[1353,1353],[1369,1369]]],[1583285683506,["Administrator@YLMF-2019OEFIPO",[[-1,1364,"由1000"]],[1369,1369],[1364,1364]]],[1583285684389,["Administrator@YLMF-2019OEFIPO",[[1,1364,"由"]],[1364,1364],[1365,1365]]],[1583285684708,["Administrator@YLMF-2019OEFIPO",[[-1,1364,"由"]],[1365,1365],[1364,1364]]],[1583285687764,["Administrator@YLMF-2019OEFIPO",[[1,1364,"有10000哥请求"]],[1364,1364],[1373,1373]]],[1583285688264,["Administrator@YLMF-2019OEFIPO",[[-1,1370,"哥请求"]],[1373,1373],[1370,1370]]],[1583285695260,["Administrator@YLMF-2019OEFIPO",[[1,1370,"个请求就会有100"]],[1370,1370],[1379,1379]]],[1583285697687,["Administrator@YLMF-2019OEFIPO",[[1,1379,"00个进程"]],[1379,1379],[1384,1384]]],[1583285698304,["Administrator@YLMF-2019OEFIPO",[[-1,1382,"进程"]],[1384,1384],[1382,1382]]],[1583285729688,["Administrator@YLMF-2019OEFIPO",[[1,1382,"CGI解释器进程 这种效率极低，所以就出现了PHP-FPM, we"]],[1382,1382],[1415,1415]]],[1583285730344,["Administrator@YLMF-2019OEFIPO",[[-1,1413,"we"]],[1415,1415],[1413,1413]]],[1583285736912,["Administrator@YLMF-2019OEFIPO",[[1,1413,"作为CGI解释期"]],[1413,1413],[1421,1421]]],[1583285737718,["Administrator@YLMF-2019OEFIPO",[[-1,1418,"解释期"]],[1421,1421],[1418,1418]]],[1583285741752,["Administrator@YLMF-2019OEFIPO",[[1,1418,"的升级版 ``"]],[1418,1418],[1425,1425]]],[1583285748156,["Administrator@YLMF-2019OEFIPO",[[1,1424,"FAST-CGI"]],[1424,1424],[1432,1432]]],[1583285748865,["Administrator@YLMF-2019OEFIPO",[[1,1433," "]],[1433,1433],[1434,1434]]],[1583285759829,["Administrator@YLMF-2019OEFIPO",[[1,1434,"是"]],[1434,1434],[1435,1435]]],[1583285765214,["Administrator@YLMF-2019OEFIPO",[[-1,1434,"是"]],[1435,1435],[1434,1434]]],[1583285767432,["Administrator@YLMF-2019OEFIPO",[[1,1434,"可以李娇儿"]],[1434,1434],[1439,1439]]],[1583285768161,["Administrator@YLMF-2019OEFIPO",[[-1,1436,"李娇儿"]],[1439,1439],[1436,1436]]],[1583285778606,["Administrator@YLMF-2019OEFIPO",[[1,1436,"理解为这是一种协议用于web服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。"]],[1436,1436],[1489,1489]]],[1583285779100,["Administrator@YLMF-2019OEFIPO",[[-1,1436,"理解为这是一种协议用于web服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。"]],[1489,1489],[1436,1436]]],[1583285781034,["Administrator@YLMF-2019OEFIPO",[[1,1436,"李娇儿"]],[1436,1436],[1439,1439]]],[1583285782953,["Administrator@YLMF-2019OEFIPO",[[-1,1434,"可以李娇儿"]],[1439,1439],[1434,1434]]],[1583285805793,["Administrator@YLMF-2019OEFIPO",[[1,1434,"可以理解成这是一种协议 用于web服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。与CGI相对比， "]],[1434,1434],[1499,1499]]],[1583285806261,["Administrator@YLMF-2019OEFIPO",[[-1,1498," "]],[1499,1499],[1498,1498]]],[1583285809855,["Administrator@YLMF-2019OEFIPO",[[1,1498,"fast-cgi每次处理完请求后，不会kill掉这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。这样每次就不用重新fork一个进程了，从而避免了每个请求进程创建和终止的开销，大大提高了效率。\n\n作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1498,1498],[1695,1695]]],[1583285812100,["Administrator@YLMF-2019OEFIPO",[[-1,1601,"作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1600,1695],[1600,1600]]],[1583285812528,["Administrator@YLMF-2019OEFIPO",[[-1,1600,"\n"]],[1600,1600],[1599,1599]]],[1583285908910,["Administrator@YLMF-2019OEFIPO",[[-1,1208,"总结"],[1,1210,"l"]],[1208,1210],[1208,1209]]],[1583285910308,["Administrator@YLMF-2019OEFIPO",[[-1,1208,"l"],[1,1209,"两种"]],[1208,1208],[1210,1210]]],[1583285916786,["Administrator@YLMF-2019OEFIPO",[[1,1210,"模式相对比（）"]],[1210,1210],[1217,1217]]],[1583285923346,["Administrator@YLMF-2019OEFIPO",[[-1,1208,"两种模式相对比（）"]],[1216,1216],[1208,1208]]],[1583285925988,["Administrator@YLMF-2019OEFIPO",[[1,1208,"总结归纳"]],[1208,1208],[1212,1212]]],[1583285948480,["Administrator@YLMF-2019OEFIPO",[[1,1307,"\n"]],[1307,1307],[1308,1308]]],[1583285948980,["Administrator@YLMF-2019OEFIPO",[[1,1308,"\n"]],[1308,1308],[1309,1309]]],[1583285949014,["Administrator@YLMF-2019OEFIPO",[[1,1309,"\n"]],[1309,1309],[1310,1310]]],[1583285949046,["Administrator@YLMF-2019OEFIPO",[[1,1310,"\n"]],[1310,1310],[1311,1311]]],[1583285949079,["Administrator@YLMF-2019OEFIPO",[[1,1311,"\n"]],[1311,1311],[1312,1312]]],[1583285949112,["Administrator@YLMF-2019OEFIPO",[[1,1312,"\n"]],[1312,1312],[1313,1313]]],[1583285949145,["Administrator@YLMF-2019OEFIPO",[[1,1313,"\n"]],[1313,1313],[1314,1314]]],[1583285949178,["Administrator@YLMF-2019OEFIPO",[[1,1314,"\n"]],[1314,1314],[1315,1315]]],[1583285949211,["Administrator@YLMF-2019OEFIPO",[[1,1315,"\n"]],[1315,1315],[1316,1316]]],[1583285949245,["Administrator@YLMF-2019OEFIPO",[[1,1316,"\n"]],[1316,1316],[1317,1317]]],[1583285949278,["Administrator@YLMF-2019OEFIPO",[[1,1317,"\n"]],[1317,1317],[1318,1318]]],[1583285949311,["Administrator@YLMF-2019OEFIPO",[[1,1318,"\n"]],[1318,1318],[1319,1319]]],[1583285949345,["Administrator@YLMF-2019OEFIPO",[[1,1319,"\n"]],[1319,1319],[1320,1320]]],[1583285951380,["Administrator@YLMF-2019OEFIPO",[[1,1249,"\n"]],[1249,1249],[1250,1250]]],[1583285951541,["Administrator@YLMF-2019OEFIPO",[[1,1250,"\n"]],[1250,1250],[1251,1251]]],[1583285951676,["Administrator@YLMF-2019OEFIPO",[[1,1251,"\n"]],[1251,1251],[1252,1252]]],[1583285958080,["Administrator@YLMF-2019OEFIPO",[[1,1249," 而 PHP"]],[1249,1249],[1255,1255]]],[1583285959693,["Administrator@YLMF-2019OEFIPO",[[1,1252,"`"]],[1252,1252],[1253,1253]]],[1583285960278,["Administrator@YLMF-2019OEFIPO",[[1,1256,"`"]],[1256,1256],[1257,1257]]],[1583285962269,["Administrator@YLMF-2019OEFIPO",[[1,1256,"-CGI"]],[1256,1256],[1260,1260]]],[1583285966789,["Administrator@YLMF-2019OEFIPO",[[1,1261," 只"]],[1261,1261],[1263,1263]]],[1583285968261,["Administrator@YLMF-2019OEFIPO",[[-1,1262,"只"]],[1263,1263],[1262,1262]]],[1583285969153,["Administrator@YLMF-2019OEFIPO",[[1,1262,"是"]],[1262,1262],[1263,1263]]],[1583285972853,["Administrator@YLMF-2019OEFIPO",[[-1,1265,"\n"]],[1265,1265],[1264,1264]]],[1583285973252,["Administrator@YLMF-2019OEFIPO",[[-1,1264,"\n"]],[1264,1264],[1263,1263]]],[1583285973924,["Administrator@YLMF-2019OEFIPO",[[1,1264,"\n"]],[1263,1263],[1264,1264]]],[1583285974090,["Administrator@YLMF-2019OEFIPO",[[1,1265,"\n"]],[1264,1264],[1265,1265]]],[1583285974229,["Administrator@YLMF-2019OEFIPO",[[1,1266,"\n"]],[1265,1265],[1266,1266]]],[1583285974356,["Administrator@YLMF-2019OEFIPO",[[1,1267,"\n"]],[1266,1266],[1267,1267]]],[1583285979217,["Administrator@YLMF-2019OEFIPO",[[1,1263,"一个进程"]],[1263,1263],[1267,1267]]],[1583286008433,["Administrator@YLMF-2019OEFIPO",[[1,1267,"吗，"]],[1267,1267],[1269,1269]]],[1583286009008,["Administrator@YLMF-2019OEFIPO",[[-1,1267,"吗，"]],[1269,1269],[1267,1267]]],[1583286017773,["Administrator@YLMF-2019OEFIPO",[[1,1267,"， 用于实现``"]],[1267,1267],[1275,1275]]],[1583286019253,["Administrator@YLMF-2019OEFIPO",[[1,1274,"CGI"]],[1274,1274],[1277,1277]]],[1583286025310,["Administrator@YLMF-2019OEFIPO",[[1,1278," 这种协议，"]],[1278,1278],[1284,1284]]],[1583286025809,["Administrator@YLMF-2019OEFIPO",[[-1,1283,"，"]],[1284,1284],[1283,1283]]],[1583286026141,["Administrator@YLMF-2019OEFIPO",[[1,1283,"，。"]],[1283,1283],[1285,1285]]],[1583286027020,["Administrator@YLMF-2019OEFIPO",[[-1,1284,"。"]],[1285,1285],[1284,1284]]],[1583286030873,["Administrator@YLMF-2019OEFIPO",[[1,1284,"大师他是单进程得"]],[1284,1284],[1292,1292]]],[1583286032693,["Administrator@YLMF-2019OEFIPO",[[-1,1291,"得"]],[1292,1292],[1291,1291]]],[1583286039447,["Administrator@YLMF-2019OEFIPO",[[1,1291,"的，一个进程处理一个请i去，"]],[1291,1291],[1305,1305]]],[1583286040489,["Administrator@YLMF-2019OEFIPO",[[-1,1301,"请i去，"]],[1305,1305],[1301,1301]]],[1583286048331,["Administrator@YLMF-2019OEFIPO",[[1,1301,"请求，处理结束后就自我销毁"]],[1301,1301],[1314,1314]]],[1583286049873,["Administrator@YLMF-2019OEFIPO",[[1,1319,"\n"]],[1314,1314],[1315,1315]]],[1583286050466,["Administrator@YLMF-2019OEFIPO",[[1,1320,"\n"]],[1315,1315],[1316,1316]]],[1583286054370,["Administrator@YLMF-2019OEFIPO",[[-1,1320,"\n"]],[1321,1321],[1320,1320]]],[1583286054553,["Administrator@YLMF-2019OEFIPO",[[-1,1319,"\n"]],[1320,1320],[1319,1319]]],[1583286054714,["Administrator@YLMF-2019OEFIPO",[[-1,1318,"\n"]],[1319,1319],[1318,1318]]],[1583286054873,["Administrator@YLMF-2019OEFIPO",[[-1,1317,"\n"]],[1318,1318],[1317,1317]]],[1583286055237,["Administrator@YLMF-2019OEFIPO",[[-1,1316,"\n"]],[1317,1317],[1316,1316]]],[1583286055614,["Administrator@YLMF-2019OEFIPO",[[-1,1315,"\n"]],[1316,1316],[1315,1315]]],[1583286064629,["Administrator@YLMF-2019OEFIPO",[[-1,1366,"cgi"]],[1366,1369],[1366,1366]]],[1583286065225,["Administrator@YLMF-2019OEFIPO",[[1,1366,"``"]],[1366,1366],[1368,1368]]],[1583286066970,["Administrator@YLMF-2019OEFIPO",[[1,1367,"PHP_C"]],[1367,1367],[1372,1372]]],[1583286067481,["Administrator@YLMF-2019OEFIPO",[[-1,1370,"_C"]],[1372,1372],[1370,1370]]],[1583286067663,["Administrator@YLMF-2019OEFIPO",[[1,1370,"-="]],[1370,1370],[1372,1372]]],[1583286068217,["Administrator@YLMF-2019OEFIPO",[[-1,1371,"="]],[1372,1372],[1371,1371]]],[1583286069723,["Administrator@YLMF-2019OEFIPO",[[1,1371,"CGI"]],[1371,1371],[1374,1374]]],[1583286074485,["Administrator@YLMF-2019OEFIPO",[[-1,1315,"在未出现`PHP-FPM` 之前，"]],[1315,1332],[1315,1315]]],[1583286081177,["Administrator@YLMF-2019OEFIPO",[[-1,1375,"通过cgi协议转发要运行的内容，当cgi脚本结束后将结果返回给web服务器，然后这个cgi解释器进程就会自我销毁，加入有10000个请求就会有10000个CGI解释器进程 这种效率极低，"]],[1375,1468],[1375,1375]]],[1583286082434,["Administrator@YLMF-2019OEFIPO",[[1,1362,"通过cgi协议转发要运行的内容，当cgi脚本结束后将结果返回给web服务器，然后这个cgi解释器进程就会自我销毁，加入有10000个请求就会有10000个CGI解释器进程 这种效率极低，"]],[1362,1362],[1455,1455]]],[1583286085686,["Administrator@YLMF-2019OEFIPO",[[-1,1364,"cgi"]],[1365,1367],[1364,1364]]],[1583286086711,["Administrator@YLMF-2019OEFIPO",[[1,1364,"`"]],[1364,1364],[1365,1365]]],[1583286087317,["Administrator@YLMF-2019OEFIPO",[[-1,1364,"`"]],[1365,1365],[1364,1364]]],[1583286087990,["Administrator@YLMF-2019OEFIPO",[[1,1364,"``"]],[1364,1364],[1366,1366]]],[1583286089714,["Administrator@YLMF-2019OEFIPO",[[1,1365,"CGI"]],[1365,1365],[1368,1368]]],[1583286094617,["Administrator@YLMF-2019OEFIPO",[[1,1381,"php-"]],[1381,1381],[1385,1385]]],[1583286096177,["Administrator@YLMF-2019OEFIPO",[[1,1381,"`"]],[1381,1381],[1382,1382]]],[1583286098017,["Administrator@YLMF-2019OEFIPO",[[1,1389,"`"]],[1389,1389],[1390,1390]]],[1583286100849,["Administrator@YLMF-2019OEFIPO",[[-1,1382,"php-cgi"],[1,1389,"P"]],[1382,1389],[1383,1383]]],[1583286102657,["Administrator@YLMF-2019OEFIPO",[[1,1383,"HP-CGI"]],[1383,1383],[1389,1389]]],[1583286106892,["Administrator@YLMF-2019OEFIPO",[[-1,1412,"cgi"]],[1412,1415],[1412,1412]]],[1583286107633,["Administrator@YLMF-2019OEFIPO",[[1,1412,"``"]],[1412,1412],[1414,1414]]],[1583286108886,["Administrator@YLMF-2019OEFIPO",[[1,1413,"O"]],[1413,1413],[1414,1414]]],[1583286109356,["Administrator@YLMF-2019OEFIPO",[[-1,1413,"O"]],[1414,1414],[1413,1413]]],[1583286111581,["Administrator@YLMF-2019OEFIPO",[[1,1413,"PHP-CGI"]],[1413,1413],[1420,1420]]],[1583286113616,["Administrator@YLMF-2019OEFIPO",[[-1,1433,"加入"]],[1435,1435],[1433,1433]]],[1583286114369,["Administrator@YLMF-2019OEFIPO",[[1,1433,"jia"]],[1433,1433],[1436,1436]]],[1583286115025,["Administrator@YLMF-2019OEFIPO",[[-1,1433,"jia"]],[1436,1436],[1433,1433]]],[1583286116110,["Administrator@YLMF-2019OEFIPO",[[1,1433,"加入"]],[1433,1433],[1435,1435]]],[1583286116508,["Administrator@YLMF-2019OEFIPO",[[-1,1433,"加入"]],[1435,1435],[1433,1433]]],[1583286117445,["Administrator@YLMF-2019OEFIPO",[[1,1433,"假如"]],[1433,1433],[1435,1435]]],[1583286123508,["Administrator@YLMF-2019OEFIPO",[[-1,1468,"，"]],[1469,1469],[1468,1468]]],[1583286124010,["Administrator@YLMF-2019OEFIPO",[[1,1468,"。"]],[1468,1468],[1469,1469]]],[1583286124670,["Administrator@YLMF-2019OEFIPO",[[1,1482,"\n"]],[1469,1469],[1470,1470]]],[1583286124817,["Administrator@YLMF-2019OEFIPO",[[1,1483,"\n"]],[1470,1470],[1471,1471]]],[1583286129262,["Administrator@YLMF-2019OEFIPO",[[1,1471,"··"]],[1471,1471],[1473,1473]]],[1583286130057,["Administrator@YLMF-2019OEFIPO",[[-1,1471,"··"]],[1473,1473],[1471,1471]]],[1583286130573,["Administrator@YLMF-2019OEFIPO",[[1,1471,"``"]],[1471,1471],[1473,1473]]],[1583286133645,["Administrator@YLMF-2019OEFIPO",[[1,1472,"FAST-CGI"]],[1472,1472],[1480,1480]]],[1583286139086,["Administrator@YLMF-2019OEFIPO",[[1,1481," 是··"]],[1481,1481],[1485,1485]]],[1583286140205,["Administrator@YLMF-2019OEFIPO",[[-1,1483,"··"]],[1485,1485],[1483,1483]]],[1583286144069,["Administrator@YLMF-2019OEFIPO",[[1,1482,"可以理解为"]],[1482,1482],[1487,1487]]],[1583286144996,["Administrator@YLMF-2019OEFIPO",[[-1,1486,"为"]],[1487,1487],[1486,1486]]],[1583286146023,["Administrator@YLMF-2019OEFIPO",[[1,1487," ··"]],[1487,1487],[1490,1490]]],[1583286146596,["Administrator@YLMF-2019OEFIPO",[[-1,1488,"··"]],[1490,1490],[1488,1488]]],[1583286147069,["Administrator@YLMF-2019OEFIPO",[[1,1488,"``"]],[1488,1488],[1490,1490]]],[1583286148045,["Administrator@YLMF-2019OEFIPO",[[1,1489,"CGI"]],[1489,1489],[1492,1492]]],[1583286151501,["Administrator@YLMF-2019OEFIPO",[[1,1493,"升级版"]],[1493,1493],[1496,1496]]],[1583286181612,["Administrator@YLMF-2019OEFIPO",[[1,1496," 也是一种协议，用于"]],[1496,1496],[1506,1506]]],[1583286187413,["Administrator@YLMF-2019OEFIPO",[[-1,1504,"用于"],[1,1506,"eb服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。"]],[1504,1506],[1545,1545]]],[1583286191933,["Administrator@YLMF-2019OEFIPO",[[1,1504,"用于w"]],[1504,1504],[1507,1507]]],[1583286198559,["Administrator@YLMF-2019OEFIPO",[[1,1548,"但是与``"]],[1548,1548],[1553,1553]]],[1583286200353,["Administrator@YLMF-2019OEFIPO",[[1,1552,"CGI"]],[1552,1552],[1555,1555]]],[1583286209305,["Administrator@YLMF-2019OEFIPO",[[1,1556," 不同的是，``"]],[1556,1556],[1564,1564]]],[1583286210150,["Administrator@YLMF-2019OEFIPO",[[1,1563,"fas"]],[1563,1563],[1566,1566]]],[1583286210836,["Administrator@YLMF-2019OEFIPO",[[-1,1563,"fas"]],[1566,1566],[1563,1563]]],[1583286212349,["Administrator@YLMF-2019OEFIPO",[[1,1563,"FAST_"]],[1563,1563],[1568,1568]]],[1583286212690,["Administrator@YLMF-2019OEFIPO",[[-1,1567,"_"]],[1568,1568],[1567,1567]]],[1583286213834,["Administrator@YLMF-2019OEFIPO",[[1,1567,"-CGF"]],[1567,1567],[1571,1571]]],[1583286214876,["Administrator@YLMF-2019OEFIPO",[[-1,1569,"GF"]],[1571,1571],[1569,1569]]],[1583286215613,["Administrator@YLMF-2019OEFIPO",[[1,1569,"Gi"]],[1569,1569],[1571,1571]]],[1583286220468,["Administrator@YLMF-2019OEFIPO",[[1,1572,"fast-cgi每次处理完请求后，不会kill掉这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。这样每次就不用重新fork一个进程了，从而避免了每个请求进程创建和终止的开销，大大提高了效率。"]],[1572,1572],[1673,1673]]],[1583286222762,["Administrator@YLMF-2019OEFIPO",[[-1,1572,"fast-cgi"]],[1573,1580],[1572,1572]]],[1583286224464,["Administrator@YLMF-2019OEFIPO",[[-1,1570,"i"]],[1571,1571],[1570,1570]]],[1583286224681,["Administrator@YLMF-2019OEFIPO",[[1,1570,"I"]],[1570,1570],[1571,1571]]],[1583286230761,["Administrator@YLMF-2019OEFIPO",[[-1,1583,"kill掉"]],[1583,1588],[1583,1583]]],[1583286231349,["Administrator@YLMF-2019OEFIPO",[[1,1583,"zi"]],[1583,1583],[1585,1585]]],[1583286231933,["Administrator@YLMF-2019OEFIPO",[[-1,1583,"zi"]],[1585,1585],[1583,1583]]],[1583286233724,["Administrator@YLMF-2019OEFIPO",[[1,1583,"自动销毁"]],[1583,1583],[1587,1587]]],[1583286252705,["Administrator@YLMF-2019OEFIPO",[[-1,1677,"所以就出现了PHP-FPM, 作为CGI的升级版 `FAST-CGI` 可以理解成这是一种协议 用于web服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。与CGI相对比，fast-cgi每次处理完请求后，不会kill掉这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。这样每次就不用重新fork一个进程了，从而避免了每个请求进程创建和终止的开销，大大提高了效率。"]],[1677,1878],[1677,1677]]],[1583286272848,["Administrator@YLMF-2019OEFIPO",[[1,1664,"同样，``"]],[1664,1664],[1669,1669]]],[1583286275333,["Administrator@YLMF-2019OEFIPO",[[1,1668,"PHP-FPM"]],[1668,1668],[1675,1675]]],[1583286279945,["Administrator@YLMF-2019OEFIPO",[[1,1676," 即使 ``"]],[1676,1676],[1682,1682]]],[1583286282733,["Administrator@YLMF-2019OEFIPO",[[1,1681,"FAST-CGI"]],[1681,1681],[1689,1689]]],[1583286289729,["Administrator@YLMF-2019OEFIPO",[[-1,1677,"即使"]],[1679,1679],[1677,1677]]],[1583286290145,["Administrator@YLMF-2019OEFIPO",[[1,1678," "]],[1677,1677],[1678,1678]]],[1583286290719,["Administrator@YLMF-2019OEFIPO",[[1,1678,"shixi"]],[1678,1678],[1683,1683]]],[1583286291556,["Administrator@YLMF-2019OEFIPO",[[-1,1678,"shixi"]],[1683,1683],[1678,1678]]],[1583286292825,["Administrator@YLMF-2019OEFIPO",[[1,1678,"实现了"]],[1678,1678],[1681,1681]]],[1583286295361,["Administrator@YLMF-2019OEFIPO",[[1,1692,"这种协议"]],[1692,1692],[1696,1696]]],[1583286300605,["Administrator@YLMF-2019OEFIPO",[[1,1696," 它直接管理多个php-cgi进程/线程。也就是说，php-fpm是php-cgi的进程管理器，因此它算是fastcgi协议的实现。在一定程度上讲，php-fpm与php的关系，和tomcat对java的关系是类似的.\n\n作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1696,1696],[1901,1901]]],[1583286302497,["Administrator@YLMF-2019OEFIPO",[[-1,1807,"作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n"]],[1806,1902],[1806,1806]]],[1583286302945,["Administrator@YLMF-2019OEFIPO",[[-1,1818,"\n"]],[1806,1806],[1805,1805]]],[1583286319331,["Administrator@YLMF-2019OEFIPO",[[1,1704,"·"]],[1704,1704],[1705,1705]]],[1583286320412,["Administrator@YLMF-2019OEFIPO",[[-1,1704,"·"]],[1705,1705],[1704,1704]]],[1583286320765,["Administrator@YLMF-2019OEFIPO",[[1,1704,"`"]],[1704,1704],[1705,1705]]],[1583286322684,["Administrator@YLMF-2019OEFIPO",[[-1,1705,"php-cgi"]],[1705,1712],[1705,1705]]],[1583286323046,["Administrator@YLMF-2019OEFIPO",[[1,1705,"`"]],[1705,1705],[1706,1706]]],[1583286324997,["Administrator@YLMF-2019OEFIPO",[[1,1705,"PHP_"]],[1705,1705],[1709,1709]]],[1583286325453,["Administrator@YLMF-2019OEFIPO",[[-1,1708,"_"]],[1709,1709],[1708,1708]]],[1583286326361,["Administrator@YLMF-2019OEFIPO",[[1,1708,"-CGI"]],[1708,1708],[1712,1712]]],[1583286331637,["Administrator@YLMF-2019OEFIPO",[[1,1724,"`"],[1,1731,"`"]],[1724,1731],[1724,1733]]],[1583286331820,["Administrator@YLMF-2019OEFIPO",[[-1,1724,"`"],[-1,1732,"`"]],[1724,1733],[1724,1731]]],[1583286332520,["Administrator@YLMF-2019OEFIPO",[[1,1724,"`"],[1,1731,"`"]],[1724,1731],[1724,1733]]],[1583286338780,["Administrator@YLMF-2019OEFIPO",[[-1,1725,"php-fpm"]],[1725,1731],[1725,1725]]],[1583286339521,["Administrator@YLMF-2019OEFIPO",[[1,1725,"php"]],[1725,1725],[1728,1728]]],[1583286340058,["Administrator@YLMF-2019OEFIPO",[[-1,1725,"php"]],[1728,1728],[1725,1725]]],[1583286341585,["Administrator@YLMF-2019OEFIPO",[[1,1725,"PHP-C"]],[1725,1725],[1730,1730]]],[1583286342112,["Administrator@YLMF-2019OEFIPO",[[-1,1729,"C"]],[1730,1730],[1729,1729]]],[1583286342730,["Administrator@YLMF-2019OEFIPO",[[1,1729,"FPM"]],[1729,1729],[1732,1732]]],[1583286346144,["Administrator@YLMF-2019OEFIPO",[[-1,1734,"php-cgi"]],[1734,1740],[1734,1734]]],[1583286346514,["Administrator@YLMF-2019OEFIPO",[[1,1734,"``"]],[1734,1734],[1736,1736]]],[1583286349014,["Administrator@YLMF-2019OEFIPO",[[1,1735,"PHP-CGI"]],[1735,1735],[1742,1742]]],[1583286352226,["Administrator@YLMF-2019OEFIPO",[[1,1755,"`"]],[1755,1755],[1756,1756]]],[1583286353813,["Administrator@YLMF-2019OEFIPO",[[1,1763,"`"]],[1763,1763],[1764,1764]]],[1583286361418,["Administrator@YLMF-2019OEFIPO",[[-1,1756,"fastcgi"],[1,1763,"FAST-CGI"]],[1756,1763],[1764,1764]]],[1583286364934,["Administrator@YLMF-2019OEFIPO",[[1,1779,"`"]],[1779,1779],[1780,1780]]],[1583286367433,["Administrator@YLMF-2019OEFIPO",[[-1,1779,"`"]],[1780,1780],[1779,1779]]],[1583286390429,["Administrator@YLMF-2019OEFIPO",[[1,1827,"\n"]],[1814,1814],[1815,1815]]],[1583286390589,["Administrator@YLMF-2019OEFIPO",[[1,1828,"\n"]],[1815,1815],[1816,1816]]],[1583286390748,["Administrator@YLMF-2019OEFIPO",[[1,1829,"\n"]],[1816,1816],[1817,1817]]],[1583286390889,["Administrator@YLMF-2019OEFIPO",[[1,1830,"\n"]],[1817,1817],[1818,1818]]],[1583286391185,["Administrator@YLMF-2019OEFIPO",[[1,1818,"## php-fpm工作原理\n\nphp-fpm的管理对象是php-cgi进程\n\n![](//upload-images.jianshu.io/upload_images/15150269-0b470af66093f8a4.png?imageMogr2/auto-orient/strip|imageView2/2/w/781/format/webp)\n\n2.png\n\n### 1.master进程\n\nphp-fpm是一种多进程的模型，由一个master进程和若干worker进程组成（具体数量需要看php-fpm.conf的配置），master不会处理请求，而是fork出worker子进程去接受和处理请求\n\nmaster进程的主要作用就是管理worker进程，负责fork或者kill掉子进程。在启动时根据配置文件会预先启动一定数量的php-fpm进程。当请求比较多worker处理不过来时，master会fork新的worker进程处理。如果空闲的进程较多时，就会kill掉一些worker进程，避免占用浪费系统资源。\n\n### 2.worker进程\n\nworker进程的主要工作是处理请求,每个worker进程都会accept请求，接受成功后会解析fastcgi，然后执行脚本，完成后关闭请求，继续等待新的连接。\n\n作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1818,1818],[2473,2473]]],[1583286401836,["Administrator@YLMF-2019OEFIPO",[[-1,406,"\n"]],[407,407],[406,406]]],[1583286416044,["Administrator@YLMF-2019OEFIPO",[[-1,2378,"作者：冬日大草原的黄昏\n链接：https://www.jianshu.com/p/99d478ea1330\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[2378,2473],[2378,2378]]],[1583286416508,["Administrator@YLMF-2019OEFIPO",[[-1,2389,"\n"]],[2378,2378],[2377,2377]]],[1583288654018,["Administrator@YLMF-2019OEFIPO",[[-1,1861,"//upload-images.jianshu.io/upload_images/15150269-0b470af66093f8a4.png?imageMogr2/auto-orient/strip|imageView2/2/w/781/format/webp)"]],[1861,1992],[1861,1861]]],[1583288655621,["Administrator@YLMF-2019OEFIPO",[[1,1861,")"]],[1861,1861],[1862,1862]]],[1583288656346,["Administrator@YLMF-2019OEFIPO",[[1,1861,"blob:http://vue-admin.linyiyuan.top/23fa88ca-1eae-430b-b4ee-7afe3b33b4a7"]],[1861,1861],[1933,1933]]],[1583288658038,["Administrator@YLMF-2019OEFIPO",[[-1,1942,"\n"]],[1941,1942],[1941,1941]]],[1583288658867,["Administrator@YLMF-2019OEFIPO",[[-1,1936,"2.png"]],[1941,1941],[1936,1936]]],[1583288659027,["Administrator@YLMF-2019OEFIPO",[[-1,1936,"\n"]],[1936,1936],[1935,1935]]],[1583288669610,["Administrator@YLMF-2019OEFIPO",[[-1,2323,"\n"]],[2323,2323],[2322,2322]]],[1583288670110,["Administrator@YLMF-2019OEFIPO",[[-1,2322,"\n"]],[2322,2322],[2321,2321]]],[1583288670143,["Administrator@YLMF-2019OEFIPO",[[-1,2321,"\n"]],[2321,2321],[2320,2320]]],[1583288670177,["Administrator@YLMF-2019OEFIPO",[[-1,2320,"\n"]],[2320,2320],[2319,2319]]],[1583288670209,["Administrator@YLMF-2019OEFIPO",[[-1,2319,"\n"]],[2319,2319],[2318,2318]]],[1583288670243,["Administrator@YLMF-2019OEFIPO",[[-1,2318,"\n"]],[2318,2318],[2317,2317]]],[1583288670279,["Administrator@YLMF-2019OEFIPO",[[-1,2317,"\n"]],[2317,2317],[2316,2316]]],[1583288670308,["Administrator@YLMF-2019OEFIPO",[[-1,2316,"\n"]],[2316,2316],[2315,2315]]],[1583288670342,["Administrator@YLMF-2019OEFIPO",[[-1,2315,"\n"]],[2315,2315],[2314,2314]]],[1583288670374,["Administrator@YLMF-2019OEFIPO",[[-1,2314,"\n"]],[2314,2314],[2313,2313]]],[1583288670408,["Administrator@YLMF-2019OEFIPO",[[-1,2313,"\n"]],[2313,2313],[2312,2312]]],[1583288670678,["Administrator@YLMF-2019OEFIPO",[[-1,2312,"\n"]],[2312,2312],[2311,2311]]],[1583288748871,["Administrator@YLMF-2019OEFIPO",[[1,1817,"\n"]],[1813,1813],[1814,1814]]],[1583288749022,["Administrator@YLMF-2019OEFIPO",[[1,1818,"\n"]],[1814,1814],[1815,1815]]],[1583288749431,["Administrator@YLMF-2019OEFIPO",[[1,1815,"x"]],[1815,1815],[1816,1816]]],[1583288750067,["Administrator@YLMF-2019OEFIPO",[[-1,1815,"x"]],[1816,1816],[1815,1815]]],[1583288771051,["Administrator@YLMF-2019OEFIPO",[[1,1815,"需注意的时，当请求量过大时，进程有时候并不能"]],[1815,1815],[1837,1837]]],[1583288787615,["Administrator@YLMF-2019OEFIPO",[[1,1837,"处理得很快，会一直排队，这时候就造成了``"]],[1837,1837],[1858,1858]]],[1583288789023,["Administrator@YLMF-2019OEFIPO",[[1,1857,"FPM"]],[1857,1857],[1860,1860]]],[1583288789598,["Administrator@YLMF-2019OEFIPO",[[-1,1857,"FPM"]],[1860,1860],[1857,1857]]],[1583288789831,["Administrator@YLMF-2019OEFIPO",[[1,1857,"p"]],[1857,1857],[1858,1858]]],[1583288790338,["Administrator@YLMF-2019OEFIPO",[[-1,1857,"p"]],[1858,1858],[1857,1857]]],[1583288790923,["Administrator@YLMF-2019OEFIPO",[[1,1857,"PHP_"]],[1857,1857],[1861,1861]]],[1583288791364,["Administrator@YLMF-2019OEFIPO",[[-1,1860,"_"]],[1861,1861],[1860,1860]]],[1583288792340,["Administrator@YLMF-2019OEFIPO",[[1,1860,"-fpm"]],[1860,1860],[1864,1864]]],[1583288793146,["Administrator@YLMF-2019OEFIPO",[[-1,1861,"fpm"]],[1864,1864],[1861,1861]]],[1583288793471,["Administrator@YLMF-2019OEFIPO",[[1,1861,"FOPM"]],[1861,1861],[1865,1865]]],[1583288794115,["Administrator@YLMF-2019OEFIPO",[[-1,1862,"OPM"]],[1865,1865],[1862,1862]]],[1583288794449,["Administrator@YLMF-2019OEFIPO",[[1,1862,"F"]],[1862,1862],[1863,1863]]],[1583288795167,["Administrator@YLMF-2019OEFIPO",[[-1,1862,"F"]],[1863,1863],[1862,1862]]],[1583288795904,["Administrator@YLMF-2019OEFIPO",[[1,1862,"pm"]],[1862,1862],[1864,1864]]],[1583288796314,["Administrator@YLMF-2019OEFIPO",[[-1,1862,"pm"]],[1864,1864],[1862,1862]]],[1583288796707,["Administrator@YLMF-2019OEFIPO",[[1,1862,"PM"]],[1862,1862],[1864,1864]]],[1583288819267,["Administrator@YLMF-2019OEFIPO",[[1,1865," 进程CPU过高，导致网站502 503"]],[1865,1865],[1885,1885]]],[1583288819818,["Administrator@YLMF-2019OEFIPO",[[-1,1884,"3"]],[1885,1885],[1884,1884]]],[1583288819891,["Administrator@YLMF-2019OEFIPO",[[1,1884,"4"]],[1884,1884],[1885,1885]]],[1583288824859,["Administrator@YLMF-2019OEFIPO",[[1,1874,"甚至"]],[1874,1874],[1876,1876]]],[1583288831431,["Administrator@YLMF-2019OEFIPO",[[1,1887,"，但是我们可以"]],[1887,1887],[1894,1894]]],[1583288842226,["Administrator@YLMF-2019OEFIPO",[[1,1894,"根据自身服务器的配置，适当对进程进行增加 ，"]],[1894,1894],[1916,1916]]],[1583288843491,["Administrator@YLMF-2019OEFIPO",[[-1,1914," ，"]],[1916,1916],[1914,1914]]],[1583288845019,["Administrator@YLMF-2019OEFIPO",[[1,1914,"，在"]],[1914,1914],[1916,1916]]],[1583288845831,["Administrator@YLMF-2019OEFIPO",[[-1,1914,"，在"]],[1916,1916],[1914,1914]]],[1583288866412,["Administrator@YLMF-2019OEFIPO",[[1,1914,"，详情请看![]"]],[1914,1914],[1922,1922]]],[1583288874291,["Administrator@YLMF-2019OEFIPO",[[-1,1919,"![]"]],[1922,1922],[1919,1919]]],[1583288874554,["Administrator@YLMF-2019OEFIPO",[[1,1919,"[PHP-FPM配置详解](php/PHP优化配置/PHP-FPM配置详解.md) "]],[1919,1919],[1961,1961]]]],null,"Administrator@YLMF-2019OEFIPO"],["a3b6113a-deac-45dd-979c-8531a9082f8b",1583288950407,"# 了解PHP_FPM运行机制\n\n\n## CGI\n\nweb server（比如说[nginx](https://www.baidu.com/s?wd=nginx&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)）只是内容的分发者。比如，如果请求`/index.html`，那么web server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。好了，如果现在请求的是`/index.php`，根据配置文件，nginx知道这个不是静态文件，需要去找PHP解析器来处理，那么他会把这个请求简单处理后交给PHP解析器。Nginx会传哪些数据给PHP解析器呢？url要有吧，查询字符串也得有吧，POST数据也要有，HTTP header不能少吧，好的，CGI就是规定要传哪些数据、以什么样的格式传递给后方处理这个请求的协议。仔细想想，你在PHP代码中使用的用户从哪里来的。\n当web server收到`/index.php`这个请求后，会启动对应的CGI程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程。web server再把结果返回给浏览器。\n\n## Fastcgi\n\n提高性能，那么CGI程序的性能问题[在哪](https://www.baidu.com/s?wd=%E5%9C%A8%E5%93%AA&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)呢？\"PHP解析器会解析php.ini文件，初始化执行环境\"，就是这里了。标准的CGI对每个请求都会执行这些步骤（不闲累啊！启动进程很累的说！），所以处理每个时间的时间会比较长。这明显不合理嘛！那么Fastcgi是怎么做的呢？首先，Fastcgi会先启一个master，解析配置文件，初始化执行环境，然后再启动多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是fastcgi的对进程的管理。\n\n## PHP-FPM\n\n大家都知道，PHP的解释器是php-cgi。php-cgi只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理（皇上，臣妾真的做不到啊！）所以就出现了一些能够调度php-cgi进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。好了PHP-FPM也是这么个东东，在长时间的发展后，逐渐得到了大家的认可（要知道，前几年大家可是抱怨PHP-FPM稳定性太差的），也越来越流行。\n\n\n## 总结归纳\n\n`CGI` 是webserver和web应用程序交流时的一组接口规范。 而 `PHP-CGI` 是一个进程， 用于实现`CGI` 这种协议，大师他是单进程的，一个进程处理一个请求，处理结束后就自我销毁\n我们请求web服务器，web服务器需要解析PHP文件就会临时启动一个`PHP-CGI`解释器，通过`CGI`协议转发要运行的内容，当`PHP-CGI`脚本结束后将结果返回给web服务器，然后这个`PHP-CGI`解释器进程就会自我销毁，假如有10000个请求就会有10000个CGI解释器进程 这种效率极低。\n\n`FAST-CGI` 可以理解是 `CGI`升级版 也是一种协议，用于web服务器（nginx，Apache）和处理程序间进行通信，是一种应用层通信协议。但是与`CGI` 不同的是，`FAST-CGI`每次处理完请求后，不会自动销毁这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。这样每次就不用重新fork一个进程了，从而避免了每个请求进程创建和终止的开销，大大提高了效率。同样，`PHP-FPM`  实现了 `FAST-CGI`这种协议 它直接管理多个`PHP-CGI`进程/线程。也就是说，`PHP-FPM`是`PHP-CGI`的进程管理器，因此它算是`FAST-CGI`协议的实现。在一定程度上讲，php-fpm与php的关系，和tomcat对java的关系是类似的.\n\n需注意的时，当请求量过大时，进程有时候并不能处理得很快，会一直排队，这时候就造成了`PHP-FPM` 进程CPU过高，甚至导致网站502 504，但是我们可以根据自身服务器的配置，适当对进程进行增加，详情请看[PHP-FPM配置详解](php/PHP优化配置/PHP-FPM配置详解.md) \n\n\n\n## php-fpm工作原理\n\nphp-fpm的管理对象是php-cgi进程\n\n![](blob:http://vue-admin.linyiyuan.top/23fa88ca-1eae-430b-b4ee-7afe3b33b4a7)\n\n### 1.master进程\n\nphp-fpm是一种多进程的模型，由一个master进程和若干worker进程组成（具体数量需要看php-fpm.conf的配置），master不会处理请求，而是fork出worker子进程去接受和处理请求\n\nmaster进程的主要作用就是管理worker进程，负责fork或者kill掉子进程。在启动时根据配置文件会预先启动一定数量的php-fpm进程。当请求比较多worker处理不过来时，master会fork新的worker进程处理。如果空闲的进程较多时，就会kill掉一些worker进程，避免占用浪费系统资源。\n\n### 2.worker进程\n\nworker进程的主要工作是处理请求,每个worker进程都会accept请求，接受成功后会解析fastcgi，然后执行脚本，完成后关闭请求，继续等待新的连接。\n",[[1583288937891,["Administrator@YLMF-2019OEFIPO",[[-1,18,"## CGI\n\nweb server（比如说[nginx](https://www.baidu.com/s?wd=nginx&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)）只是内容的分发者。比如，如果请求`/index.html`，那么web server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。好了，如果现在请求的是`/index.php`，根据配置文件，nginx知道这个不是静态文件，需要去找PHP解析器来处理，那么他会把这个请求简单处理后交给PHP解析器。Nginx会传哪些数据给PHP解析器呢？url要有吧，查询字符串也得有吧，POST数据也要有，HTTP header不能少吧，好的，CGI就是规定要传哪些数据、以什么样的格式传递给后方处理这个请求的协议。仔细想想，你在PHP代码中使用的用户从哪里来的。\n当web server收到`/index.php`这个请求后，会启动对应的CGI程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程。web server再把结果返回给浏览器。\n\n## Fastcgi\n\n提高性能，那么CGI程序的性能问题[在哪](https://www.baidu.com/s?wd=%E5%9C%A8%E5%93%AA&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)呢？\"PHP解析器会解析php.ini文件，初始化执行环境\"，就是这里了。标准的CGI对每个请求都会执行这些步骤（不闲累啊！启动进程很累的说！），所以处理每个时间的时间会比较长。这明显不合理嘛！那么Fastcgi是怎么做的呢？首先，Fastcgi会先启一个master，解析配置文件，初始化执行环境，然后再启动多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是fastcgi的对进程的管理。\n\n## PHP-FPM\n\n大家都知道，PHP的解释器是php-cgi。php-cgi只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理（皇上，臣妾真的做不到啊！）所以就出现了一些能够调度php-cgi进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。好了PHP-FPM也是这么个东东，在长时间的发展后，逐渐得到了大家的认可（要知道，前几年大家可是抱怨PHP-FPM稳定性太差的），也越来越流行。"]],[18,1201],[18,18]]],[1583288937906,["Administrator@YLMF-2019OEFIPO",[[1,18,"="]],[18,18],[19,19]]],[1583288939302,["Administrator@YLMF-2019OEFIPO",[[-1,18,"="]],[19,19],[18,18]]],[1583288939996,["Administrator@YLMF-2019OEFIPO",[[1,18,"## CGI\n\nweb server（比如说[nginx](https://www.baidu.com/s?wd=nginx&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)）只是内容的分发者。比如，如果请求`/index.html`，那么web server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。好了，如果现在请求的是`/index.php`，根据配置文件，nginx知道这个不是静态文件，需要去找PHP解析器来处理，那么他会把这个请求简单处理后交给PHP解析器。Nginx会传哪些数据给PHP解析器呢？url要有吧，查询字符串也得有吧，POST数据也要有，HTTP header不能少吧，好的，CGI就是规定要传哪些数据、以什么样的格式传递给后方处理这个请求的协议。仔细想想，你在PHP代码中使用的用户从哪里来的。\n当web server收到`/index.php`这个请求后，会启动对应的CGI程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程。web server再把结果返回给浏览器。\n\n## Fastcgi\n\n提高性能，那么CGI程序的性能问题[在哪](https://www.baidu.com/s?wd=%E5%9C%A8%E5%93%AA&tn=24004469_oem_dg&rsv_dl=gh_pl_sl_csd)呢？\"PHP解析器会解析php.ini文件，初始化执行环境\"，就是这里了。标准的CGI对每个请求都会执行这些步骤（不闲累啊！启动进程很累的说！），所以处理每个时间的时间会比较长。这明显不合理嘛！那么Fastcgi是怎么做的呢？首先，Fastcgi会先启一个master，解析配置文件，初始化执行环境，然后再启动多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是fastcgi的对进程的管理。\n\n## PHP-FPM\n\n大家都知道，PHP的解释器是php-cgi。php-cgi只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理（皇上，臣妾真的做不到啊！）所以就出现了一些能够调度php-cgi进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。好了PHP-FPM也是这么个东东，在长时间的发展后，逐渐得到了大家的认可（要知道，前几年大家可是抱怨PHP-FPM稳定性太差的），也越来越流行。"]],[18,18],[18,1201]]],[1583288943438,["Administrator@YLMF-2019OEFIPO",[[-1,1964,"\n"]],[1964,1964],[1963,1963]]],[1583288943951,["Administrator@YLMF-2019OEFIPO",[[-1,1963,"\n"]],[1963,1963],[1962,1962]]],[1583288946283,["Administrator@YLMF-2019OEFIPO",[[1,2458,"\n"]],[2457,2457],[2458,2458]]],[1583288946983,["Administrator@YLMF-2019OEFIPO",[[-1,2458,"\n"]],[2458,2458],[2457,2457]]]],null,"Administrator@YLMF-2019OEFIPO"]]}