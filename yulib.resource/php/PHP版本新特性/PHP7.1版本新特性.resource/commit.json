{"compress":true,"commitItems":[["e925a12c-40d5-4c6f-9b53-5763c41c8908",1569858292626,"",[[1569858234436,["Administrator@YLMF-2019OEFIPO",[[1,0,"# PHP7.1版本新特性\n\n\n\n"]],[0,0],[16,16]]],[1569858359876,["Administrator@YLMF-2019OEFIPO",[[1,0,"##"],[-1,8,"版本"],[1,15,"#### 1\\. 可为空（Nullable）类型"],[1,17,"参数以及返回值的类型现在可以通过在类型前加上一个问号使之允许为空。当启用这个特性时，传入的参数或者函数返回的结果要么是给定的类型，要么是null\n\n```\n#php5\nfunction($a = null){\n  if($a===null) {\n    return null;\n  }\n  return $a;\n}\n#php7+\nfunction fun() :?string\n{\n  return null;\n}\n\nfunction fun1(?$a)\n{\n  var_dump($a);\n}\nfun1(null);//null\nfun1('1');//1\n\n```\n\n#### 2\\. void 类型\n\n返回值声明为 void 类型的方法要么干脆省去 return 语句。对于 void来说，**NULL** 不是一个合法的返回值。\n\n```\nfunction fun() :void\n{\n  echo \"hello world\";\n}\n\n```\n\n#### 3\\. 类常量可见性\n\n```\nclass Something\n{\n    const PUBLIC_CONST_A = 1;\n    public const PUBLIC_CONST_B = 2;\n    protected const PROTECTED_CONST = 3;\n    private const PRIVATE_CONST = 4;\n}\n\n```\n\n#### 4\\. iterable 伪类\n\n这可以被用在参数或者返回值类型中，它代表接受数组或者实现了**Traversable**接口的对象.\n\n```\nfunction iterator(iterable $iter)\n{\n    foreach ($iter as $val) {\n        //\n    }\n}\n\n```\n\n#### 5\\. 多异常捕获处理\n\n一个catch语句块现在可以通过管道字符(_|_)来实现多个异常的捕获。 这对于需要同时处理来自不同类的不同异常时很有用\n\n```\ntry {\n    // some code\n} catch (FirstException | SecondException $e) {\n    // handle first and second exceptions\n}\n\n```\n\n#### 6\\. list支持键名\n\n```\n$data = [\n    [\"id\" => 1, \"name\" => 'Tom'],\n    [\"id\" => 2, \"name\" => 'Fred'],\n];\n\n// list() style\nlist(\"id\" => $id1, \"name\" => $name1) = $data[0];\nvar_dump($id1);//1\n\n```\n\n#### 7\\. 字符串支持负向\n\n```\n$a= \"hello\";\n$a[-2];//l\n\n```\n\n#### 8\\. 将callback 转闭包\n\nClosure新增了一个静态方法，用于将callable快速地 转为一个Closure 对象。\n\n```\n<?php\nclass Test\n{\n    public function exposeFunction()\n    {\n        return Closure::fromCallable([$this, 'privateFunction']);\n    }\n\n    private function privateFunction($param)\n    {\n        var_dump($param);\n    }\n}\n\n$privFunc = (new Test)->exposeFunction();\n$privFunc('some value');\n\n```\n\n#### 9\\. http2 服务推送\n\n对http2服务器推送的支持现在已经被加入到 CURL 扩展\n\n### PHP7.1变更\n\n#### 1\\. 传递参数过少时将抛出错误\n\n过去我们传递参数过少 会产生warning。php7.1开始会抛出error\n\n#### [](https://xianyunyh.gitbooks.io/php-interview/PHP/php7.html#2-%E7%A7%BB%E9%99%A4%E4%BA%86extmcrypt%E6%8B%93%E5%B1%95)2\\. 移除了ext/mcrypt拓展"]],[0,17],[1926,1926]]]],null,"Administrator@YLMF-2019OEFIPO"]]}